//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace AuthentiKitTrimCalibration
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        private global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[99];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Application";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[3] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[4] = "Microsoft.UI.Xaml.DebugSettings";
            _typeNameTable[5] = "Microsoft.UI.Xaml.FocusVisualKind";
            _typeNameTable[6] = "System.Enum";
            _typeNameTable[7] = "System.ValueType";
            _typeNameTable[8] = "Microsoft.UI.Xaml.ApplicationHighContrastAdjustment";
            _typeNameTable[9] = "Microsoft.UI.Xaml.ApplicationTheme";
            _typeNameTable[10] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.ResourceDictionary>";
            _typeNameTable[11] = "System.Collections.Generic.ICollection`1<Object>";
            _typeNameTable[12] = "Int32";
            _typeNameTable[13] = "Boolean";
            _typeNameTable[14] = "System.Uri";
            _typeNameTable[15] = "System.Collections.Generic.IDictionary`2<Object, Object>";
            _typeNameTable[16] = "Windows.UI.Core.CoreDispatcher";
            _typeNameTable[17] = "Microsoft.System.DispatcherQueue";
            _typeNameTable[18] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[19] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[20] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[21] = "Windows.Foundation.Rect";
            _typeNameTable[22] = "Microsoft.UI.Composition.Compositor";
            _typeNameTable[23] = "Windows.UI.Core.CoreWindow";
            _typeNameTable[24] = "String";
            _typeNameTable[25] = "Microsoft.UI.Xaml.Controls.StackPanel";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Controls.Panel";
            _typeNameTable[27] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[28] = "Microsoft.UI.Xaml.Controls.UIElementCollection";
            _typeNameTable[29] = "System.Numerics.Vector3";
            _typeNameTable[30] = "System.Numerics.Vector2";
            _typeNameTable[31] = "Microsoft.UI.Xaml.Media.CacheMode";
            _typeNameTable[32] = "Microsoft.UI.Xaml.Media.RectangleGeometry";
            _typeNameTable[33] = "Microsoft.UI.Xaml.Media.Geometry";
            _typeNameTable[34] = "Microsoft.UI.Xaml.Media.ElementCompositeMode";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase";
            _typeNameTable[36] = "Windows.Foundation.Size";
            _typeNameTable[37] = "Microsoft.UI.Xaml.FocusState";
            _typeNameTable[38] = "Microsoft.UI.Xaml.ElementHighContrastAdjustment";
            _typeNameTable[39] = "Double";
            _typeNameTable[40] = "Microsoft.UI.Xaml.Input.KeyTipPlacementMode";
            _typeNameTable[41] = "Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode";
            _typeNameTable[42] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Input.KeyboardAccelerator>";
            _typeNameTable[43] = "Microsoft.UI.Xaml.Input.KeyboardAccelerator";
            _typeNameTable[44] = "Windows.System.VirtualKey";
            _typeNameTable[45] = "Windows.System.VirtualKeyModifiers";
            _typeNameTable[46] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.XamlLight>";
            _typeNameTable[47] = "Microsoft.UI.Xaml.Media.XamlLight";
            _typeNameTable[48] = "Microsoft.UI.Xaml.Input.ManipulationModes";
            _typeNameTable[49] = "Microsoft.UI.Xaml.ScalarTransition";
            _typeNameTable[50] = "System.Collections.Generic.IReadOnlyList`1<Microsoft.UI.Xaml.Input.Pointer>";
            _typeNameTable[51] = "Microsoft.UI.Xaml.Media.Projection";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Media.Transform";
            _typeNameTable[53] = "Microsoft.UI.Xaml.Media.GeneralTransform";
            _typeNameTable[54] = "Windows.Foundation.Point";
            _typeNameTable[55] = "Single";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Vector3Transition";
            _typeNameTable[57] = "Microsoft.UI.Xaml.Media.Shadow";
            _typeNameTable[58] = "Microsoft.UI.Xaml.Input.KeyboardNavigationMode";
            _typeNameTable[59] = "Microsoft.UI.Xaml.Media.Media3D.Transform3D";
            _typeNameTable[60] = "System.Numerics.Matrix4x4";
            _typeNameTable[61] = "Microsoft.UI.Xaml.Media.Animation.TransitionCollection";
            _typeNameTable[62] = "Microsoft.UI.Xaml.Media.Animation.Transition";
            _typeNameTable[63] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[64] = "Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy";
            _typeNameTable[65] = "Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode";
            _typeNameTable[66] = "Microsoft.UI.Xaml.XamlRoot";
            _typeNameTable[67] = "Microsoft.UI.Xaml.Controls.Orientation";
            _typeNameTable[68] = "Microsoft.UI.Xaml.HorizontalAlignment";
            _typeNameTable[69] = "Microsoft.UI.Xaml.VerticalAlignment";
            _typeNameTable[70] = "Microsoft.UI.Xaml.Controls.BackgroundSizing";
            _typeNameTable[71] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[72] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[73] = "Microsoft.UI.Xaml.CornerRadius";
            _typeNameTable[74] = "Microsoft.UI.Xaml.BrushTransition";
            _typeNameTable[75] = "Microsoft.UI.Xaml.ElementTheme";
            _typeNameTable[76] = "Microsoft.UI.Xaml.FlowDirection";
            _typeNameTable[77] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[78] = "Microsoft.UI.Xaml.SetterBaseCollection";
            _typeNameTable[79] = "Microsoft.UI.Xaml.SetterBase";
            _typeNameTable[80] = "Microsoft.UI.Xaml.TriggerCollection";
            _typeNameTable[81] = "Microsoft.UI.Xaml.TriggerBase";
            _typeNameTable[82] = "Microsoft.UI.Xaml.Controls.Button";
            _typeNameTable[83] = "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase";
            _typeNameTable[84] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[85] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[86] = "Microsoft.UI.Xaml.Controls.ClickMode";
            _typeNameTable[87] = "System.Windows.Input.ICommand";
            _typeNameTable[88] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[89] = "Microsoft.UI.Xaml.FrameworkTemplate";
            _typeNameTable[90] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[91] = "Microsoft.UI.Xaml.ElementSoundMode";
            _typeNameTable[92] = "Microsoft.UI.Xaml.Media.FontFamily";
            _typeNameTable[93] = "Windows.UI.Text.FontStretch";
            _typeNameTable[94] = "Windows.UI.Text.FontStyle";
            _typeNameTable[95] = "Windows.UI.Text.FontWeight";
            _typeNameTable[96] = "Microsoft.UI.Xaml.Controls.RequiresPointer";
            _typeNameTable[97] = "Microsoft.UI.Xaml.Controls.ControlTemplate";
            _typeNameTable[98] = "AuthentiKitTrimCalibration.MainWindow";

            _typeTable = new global::System.Type[99];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Application);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[3] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.DebugSettings);
            _typeTable[5] = typeof(global::Microsoft.UI.Xaml.FocusVisualKind);
            _typeTable[6] = typeof(global::System.Enum);
            _typeTable[7] = typeof(global::System.ValueType);
            _typeTable[8] = typeof(global::Microsoft.UI.Xaml.ApplicationHighContrastAdjustment);
            _typeTable[9] = typeof(global::Microsoft.UI.Xaml.ApplicationTheme);
            _typeTable[10] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.ResourceDictionary>);
            _typeTable[11] = typeof(global::System.Collections.Generic.ICollection<global::System.Object>);
            _typeTable[12] = typeof(global::System.Int32);
            _typeTable[13] = typeof(global::System.Boolean);
            _typeTable[14] = typeof(global::System.Uri);
            _typeTable[15] = typeof(global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>);
            _typeTable[16] = typeof(global::Windows.UI.Core.CoreDispatcher);
            _typeTable[17] = typeof(global::Microsoft.System.DispatcherQueue);
            _typeTable[18] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[19] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[21] = typeof(global::Windows.Foundation.Rect);
            _typeTable[22] = typeof(global::Microsoft.UI.Composition.Compositor);
            _typeTable[23] = typeof(global::Windows.UI.Core.CoreWindow);
            _typeTable[24] = typeof(global::System.String);
            _typeTable[25] = typeof(global::Microsoft.UI.Xaml.Controls.StackPanel);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Controls.Panel);
            _typeTable[27] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.Controls.UIElementCollection);
            _typeTable[29] = typeof(global::System.Numerics.Vector3);
            _typeTable[30] = typeof(global::System.Numerics.Vector2);
            _typeTable[31] = typeof(global::Microsoft.UI.Xaml.Media.CacheMode);
            _typeTable[32] = typeof(global::Microsoft.UI.Xaml.Media.RectangleGeometry);
            _typeTable[33] = typeof(global::Microsoft.UI.Xaml.Media.Geometry);
            _typeTable[34] = typeof(global::Microsoft.UI.Xaml.Media.ElementCompositeMode);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase);
            _typeTable[36] = typeof(global::Windows.Foundation.Size);
            _typeTable[37] = typeof(global::Microsoft.UI.Xaml.FocusState);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.ElementHighContrastAdjustment);
            _typeTable[39] = typeof(global::System.Double);
            _typeTable[40] = typeof(global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode);
            _typeTable[41] = typeof(global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode);
            _typeTable[42] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Input.KeyboardAccelerator>);
            _typeTable[43] = typeof(global::Microsoft.UI.Xaml.Input.KeyboardAccelerator);
            _typeTable[44] = typeof(global::Windows.System.VirtualKey);
            _typeTable[45] = typeof(global::Windows.System.VirtualKeyModifiers);
            _typeTable[46] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.XamlLight>);
            _typeTable[47] = typeof(global::Microsoft.UI.Xaml.Media.XamlLight);
            _typeTable[48] = typeof(global::Microsoft.UI.Xaml.Input.ManipulationModes);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.ScalarTransition);
            _typeTable[50] = typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Input.Pointer>);
            _typeTable[51] = typeof(global::Microsoft.UI.Xaml.Media.Projection);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Media.Transform);
            _typeTable[53] = typeof(global::Microsoft.UI.Xaml.Media.GeneralTransform);
            _typeTable[54] = typeof(global::Windows.Foundation.Point);
            _typeTable[55] = typeof(global::System.Single);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Vector3Transition);
            _typeTable[57] = typeof(global::Microsoft.UI.Xaml.Media.Shadow);
            _typeTable[58] = typeof(global::Microsoft.UI.Xaml.Input.KeyboardNavigationMode);
            _typeTable[59] = typeof(global::Microsoft.UI.Xaml.Media.Media3D.Transform3D);
            _typeTable[60] = typeof(global::System.Numerics.Matrix4x4);
            _typeTable[61] = typeof(global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.Media.Animation.Transition);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[64] = typeof(global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy);
            _typeTable[65] = typeof(global::Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode);
            _typeTable[66] = typeof(global::Microsoft.UI.Xaml.XamlRoot);
            _typeTable[67] = typeof(global::Microsoft.UI.Xaml.Controls.Orientation);
            _typeTable[68] = typeof(global::Microsoft.UI.Xaml.HorizontalAlignment);
            _typeTable[69] = typeof(global::Microsoft.UI.Xaml.VerticalAlignment);
            _typeTable[70] = typeof(global::Microsoft.UI.Xaml.Controls.BackgroundSizing);
            _typeTable[71] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[72] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[73] = typeof(global::Microsoft.UI.Xaml.CornerRadius);
            _typeTable[74] = typeof(global::Microsoft.UI.Xaml.BrushTransition);
            _typeTable[75] = typeof(global::Microsoft.UI.Xaml.ElementTheme);
            _typeTable[76] = typeof(global::Microsoft.UI.Xaml.FlowDirection);
            _typeTable[77] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[78] = typeof(global::Microsoft.UI.Xaml.SetterBaseCollection);
            _typeTable[79] = typeof(global::Microsoft.UI.Xaml.SetterBase);
            _typeTable[80] = typeof(global::Microsoft.UI.Xaml.TriggerCollection);
            _typeTable[81] = typeof(global::Microsoft.UI.Xaml.TriggerBase);
            _typeTable[82] = typeof(global::Microsoft.UI.Xaml.Controls.Button);
            _typeTable[83] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase);
            _typeTable[84] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[85] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[86] = typeof(global::Microsoft.UI.Xaml.Controls.ClickMode);
            _typeTable[87] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[88] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[89] = typeof(global::Microsoft.UI.Xaml.FrameworkTemplate);
            _typeTable[90] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[91] = typeof(global::Microsoft.UI.Xaml.ElementSoundMode);
            _typeTable[92] = typeof(global::Microsoft.UI.Xaml.Media.FontFamily);
            _typeTable[93] = typeof(global::Windows.UI.Text.FontStretch);
            _typeTable[94] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[95] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[96] = typeof(global::Microsoft.UI.Xaml.Controls.RequiresPointer);
            _typeTable[97] = typeof(global::Microsoft.UI.Xaml.Controls.ControlTemplate);
            _typeTable[98] = typeof(global::AuthentiKitTrimCalibration.MainWindow);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_Application() { return new global::Microsoft.UI.Xaml.Application(); }
        private object Activate_2_ResourceDictionary() { return new global::Microsoft.UI.Xaml.ResourceDictionary(); }
        private object Activate_18_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_19_Window() { return new global::Microsoft.UI.Xaml.Window(); }
        private object Activate_22_Compositor() { return new global::Microsoft.UI.Composition.Compositor(); }
        private object Activate_25_StackPanel() { return new global::Microsoft.UI.Xaml.Controls.StackPanel(); }
        private object Activate_32_RectangleGeometry() { return new global::Microsoft.UI.Xaml.Media.RectangleGeometry(); }
        private object Activate_43_KeyboardAccelerator() { return new global::Microsoft.UI.Xaml.Input.KeyboardAccelerator(); }
        private object Activate_47_XamlLight() { return new global::Microsoft.UI.Xaml.Media.XamlLight(); }
        private object Activate_49_ScalarTransition() { return new global::Microsoft.UI.Xaml.ScalarTransition(); }
        private object Activate_56_Vector3Transition() { return new global::Microsoft.UI.Xaml.Vector3Transition(); }
        private object Activate_61_TransitionCollection() { return new global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection(); }
        private object Activate_74_BrushTransition() { return new global::Microsoft.UI.Xaml.BrushTransition(); }
        private object Activate_77_Style() { return new global::Microsoft.UI.Xaml.Style(); }
        private object Activate_78_SetterBaseCollection() { return new global::Microsoft.UI.Xaml.SetterBaseCollection(); }
        private object Activate_82_Button() { return new global::Microsoft.UI.Xaml.Controls.Button(); }
        private object Activate_84_ContentControl() { return new global::Microsoft.UI.Xaml.Controls.ContentControl(); }
        private object Activate_88_DataTemplate() { return new global::Microsoft.UI.Xaml.DataTemplate(); }
        private object Activate_90_DataTemplateSelector() { return new global::Microsoft.UI.Xaml.Controls.DataTemplateSelector(); }
        private object Activate_97_ControlTemplate() { return new global::Microsoft.UI.Xaml.Controls.ControlTemplate(); }
        private object Activate_98_MainWindow() { return new global::AuthentiKitTrimCalibration.MainWindow(); }
        private void MapAdd_2_ResourceDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_10_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.ResourceDictionary>)instance;
            var newItem = (global::Microsoft.UI.Xaml.ResourceDictionary)item;
            collection.Add(newItem);
        }
        private void VectorAdd_11_ICollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void MapAdd_15_IDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void MapAdd_18_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_28_UIElementCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.UIElement>)instance;
            var newItem = (global::Microsoft.UI.Xaml.UIElement)item;
            collection.Add(newItem);
        }
        private void VectorAdd_42_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Input.KeyboardAccelerator>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Media.XamlLight>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Media.XamlLight)item;
            collection.Add(newItem);
        }
        private void VectorAdd_61_TransitionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Media.Animation.Transition>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Media.Animation.Transition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_78_SetterBaseCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.SetterBase>)instance;
            var newItem = (global::Microsoft.UI.Xaml.SetterBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_80_TriggerCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.TriggerBase>)instance;
            var newItem = (global::Microsoft.UI.Xaml.TriggerBase)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Application
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_Application;
                userType.AddMemberName("Resources");
                userType.AddMemberName("DebugSettings");
                userType.AddMemberName("FocusVisualKind");
                userType.AddMemberName("HighContrastAdjustment");
                userType.AddMemberName("RequestedTheme");
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Microsoft.UI.Xaml.ResourceDictionary
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_2_ResourceDictionary;
                userType.DictionaryAdd = MapAdd_2_ResourceDictionary;
                userType.AddMemberName("MergedDictionaries");
                userType.AddMemberName("Keys");
                userType.AddMemberName("Values");
                userType.AddMemberName("Count");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("Source");
                userType.AddMemberName("ThemeDictionaries");
                xamlType = userType;
                break;

            case 3:   //  Microsoft.UI.Xaml.DependencyObject
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Dispatcher");
                userType.AddMemberName("DispatcherQueue");
                xamlType = userType;
                break;

            case 4:   //  Microsoft.UI.Xaml.DebugSettings
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 5:   //  Microsoft.UI.Xaml.FocusVisualKind
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("DottedLine", global::Microsoft.UI.Xaml.FocusVisualKind.DottedLine);
                userType.AddEnumValue("HighVisibility", global::Microsoft.UI.Xaml.FocusVisualKind.HighVisibility);
                userType.AddEnumValue("Reveal", global::Microsoft.UI.Xaml.FocusVisualKind.Reveal);
                xamlType = userType;
                break;

            case 6:   //  System.Enum
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 7:   //  System.ValueType
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 8:   //  Microsoft.UI.Xaml.ApplicationHighContrastAdjustment
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.ApplicationHighContrastAdjustment.None);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.ApplicationHighContrastAdjustment.Auto);
                xamlType = userType;
                break;

            case 9:   //  Microsoft.UI.Xaml.ApplicationTheme
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Light", global::Microsoft.UI.Xaml.ApplicationTheme.Light);
                userType.AddEnumValue("Dark", global::Microsoft.UI.Xaml.ApplicationTheme.Dark);
                xamlType = userType;
                break;

            case 10:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.ResourceDictionary>
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_10_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  System.Collections.Generic.ICollection`1<Object>
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_11_ICollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 12:   //  Int32
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Boolean
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  System.Uri
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  System.Collections.Generic.IDictionary`2<Object, Object>
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.DictionaryAdd = MapAdd_15_IDictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  Windows.UI.Core.CoreDispatcher
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 17:   //  Microsoft.System.DispatcherQueue
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_18_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_18_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 19:   //  Microsoft.UI.Xaml.Window
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_Window;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Window.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("Bounds");
                userType.AddMemberName("Compositor");
                userType.AddMemberName("CoreWindow");
                userType.AddMemberName("Dispatcher");
                userType.AddMemberName("DispatcherQueue");
                userType.AddMemberName("ExtendsContentIntoTitleBar");
                userType.AddMemberName("Title");
                userType.AddMemberName("Visible");
                xamlType = userType;
                break;

            case 20:   //  Microsoft.UI.Xaml.UIElement
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AccessKey");
                userType.AddMemberName("AccessKeyScopeOwner");
                userType.AddMemberName("ActualOffset");
                userType.AddMemberName("ActualSize");
                userType.AddMemberName("AllowDrop");
                userType.AddMemberName("CacheMode");
                userType.AddMemberName("CanBeScrollAnchor");
                userType.AddMemberName("CanDrag");
                userType.AddMemberName("CenterPoint");
                userType.AddMemberName("Clip");
                userType.AddMemberName("CompositeMode");
                userType.AddMemberName("ContextFlyout");
                userType.AddMemberName("DesiredSize");
                userType.AddMemberName("ExitDisplayModeOnAccessKeyInvoked");
                userType.AddMemberName("FocusState");
                userType.AddMemberName("HighContrastAdjustment");
                userType.AddMemberName("IsAccessKeyScope");
                userType.AddMemberName("IsDoubleTapEnabled");
                userType.AddMemberName("IsHitTestVisible");
                userType.AddMemberName("IsHoldingEnabled");
                userType.AddMemberName("IsRightTapEnabled");
                userType.AddMemberName("IsTabStop");
                userType.AddMemberName("IsTapEnabled");
                userType.AddMemberName("KeyTipHorizontalOffset");
                userType.AddMemberName("KeyTipPlacementMode");
                userType.AddMemberName("KeyTipTarget");
                userType.AddMemberName("KeyTipVerticalOffset");
                userType.AddMemberName("KeyboardAcceleratorPlacementMode");
                userType.AddMemberName("KeyboardAcceleratorPlacementTarget");
                userType.AddMemberName("KeyboardAccelerators");
                userType.AddMemberName("Lights");
                userType.AddMemberName("ManipulationMode");
                userType.AddMemberName("Opacity");
                userType.AddMemberName("OpacityTransition");
                userType.AddMemberName("PointerCaptures");
                userType.AddMemberName("Projection");
                userType.AddMemberName("RasterizationScale");
                userType.AddMemberName("RenderSize");
                userType.AddMemberName("RenderTransform");
                userType.AddMemberName("RenderTransformOrigin");
                userType.AddMemberName("Rotation");
                userType.AddMemberName("RotationAxis");
                userType.AddMemberName("RotationTransition");
                userType.AddMemberName("Scale");
                userType.AddMemberName("ScaleTransition");
                userType.AddMemberName("Shadow");
                userType.AddMemberName("TabFocusNavigation");
                userType.AddMemberName("TabIndex");
                userType.AddMemberName("Transform3D");
                userType.AddMemberName("TransformMatrix");
                userType.AddMemberName("Transitions");
                userType.AddMemberName("Translation");
                userType.AddMemberName("TranslationTransition");
                userType.AddMemberName("UseLayoutRounding");
                userType.AddMemberName("UseSystemFocusVisuals");
                userType.AddMemberName("Visibility");
                userType.AddMemberName("XYFocusDown");
                userType.AddMemberName("XYFocusDownNavigationStrategy");
                userType.AddMemberName("XYFocusKeyboardNavigation");
                userType.AddMemberName("XYFocusLeft");
                userType.AddMemberName("XYFocusLeftNavigationStrategy");
                userType.AddMemberName("XYFocusRight");
                userType.AddMemberName("XYFocusRightNavigationStrategy");
                userType.AddMemberName("XYFocusUp");
                userType.AddMemberName("XYFocusUpNavigationStrategy");
                userType.AddMemberName("XamlRoot");
                xamlType = userType;
                break;

            case 21:   //  Windows.Foundation.Rect
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Microsoft.UI.Composition.Compositor
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  Windows.UI.Core.CoreWindow
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 24:   //  String
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Microsoft.UI.Xaml.Controls.StackPanel
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Panel"));
                userType.Activator = Activate_25_StackPanel;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.Panel.Children");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("AreHorizontalSnapPointsRegular");
                userType.AddMemberName("AreScrollSnapPointsRegular");
                userType.AddMemberName("AreVerticalSnapPointsRegular");
                userType.AddMemberName("BackgroundSizing");
                userType.AddMemberName("BorderBrush");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("CornerRadius");
                userType.AddMemberName("Padding");
                userType.AddMemberName("Spacing");
                xamlType = userType;
                break;

            case 26:   //  Microsoft.UI.Xaml.Controls.Panel
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.Panel.Children");
                userType.AddMemberName("Children");
                userType.AddMemberName("Background");
                userType.AddMemberName("BackgroundTransition");
                userType.AddMemberName("ChildrenTransitions");
                userType.AddMemberName("IsItemsHost");
                xamlType = userType;
                break;

            case 27:   //  Microsoft.UI.Xaml.FrameworkElement
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.UIElement"));
                userType.AddMemberName("HorizontalAlignment");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("ActualHeight");
                userType.AddMemberName("ActualTheme");
                userType.AddMemberName("ActualWidth");
                userType.AddMemberName("AllowFocusOnInteraction");
                userType.AddMemberName("AllowFocusWhenDisabled");
                userType.AddMemberName("BaseUri");
                userType.AddMemberName("DataContext");
                userType.AddMemberName("FlowDirection");
                userType.AddMemberName("FocusVisualMargin");
                userType.AddMemberName("FocusVisualPrimaryBrush");
                userType.AddMemberName("FocusVisualPrimaryThickness");
                userType.AddMemberName("FocusVisualSecondaryBrush");
                userType.AddMemberName("FocusVisualSecondaryThickness");
                userType.AddMemberName("Height");
                userType.AddMemberName("IsLoaded");
                userType.AddMemberName("Language");
                userType.AddMemberName("Margin");
                userType.AddMemberName("MaxHeight");
                userType.AddMemberName("MaxWidth");
                userType.AddMemberName("MinHeight");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("Name");
                userType.AddMemberName("Parent");
                userType.AddMemberName("RequestedTheme");
                userType.AddMemberName("Resources");
                userType.AddMemberName("Style");
                userType.AddMemberName("Tag");
                userType.AddMemberName("Triggers");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 28:   //  Microsoft.UI.Xaml.Controls.UIElementCollection
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_28_UIElementCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Numerics.Vector3
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  System.Numerics.Vector2
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  Microsoft.UI.Xaml.Media.CacheMode
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 32:   //  Microsoft.UI.Xaml.Media.RectangleGeometry
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.Geometry"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  Microsoft.UI.Xaml.Media.Geometry
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 34:   //  Microsoft.UI.Xaml.Media.ElementCompositeMode
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inherit", global::Microsoft.UI.Xaml.Media.ElementCompositeMode.Inherit);
                userType.AddEnumValue("SourceOver", global::Microsoft.UI.Xaml.Media.ElementCompositeMode.SourceOver);
                userType.AddEnumValue("MinBlend", global::Microsoft.UI.Xaml.Media.ElementCompositeMode.MinBlend);
                xamlType = userType;
                break;

            case 35:   //  Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 36:   //  Windows.Foundation.Size
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  Microsoft.UI.Xaml.FocusState
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Unfocused", global::Microsoft.UI.Xaml.FocusState.Unfocused);
                userType.AddEnumValue("Pointer", global::Microsoft.UI.Xaml.FocusState.Pointer);
                userType.AddEnumValue("Keyboard", global::Microsoft.UI.Xaml.FocusState.Keyboard);
                userType.AddEnumValue("Programmatic", global::Microsoft.UI.Xaml.FocusState.Programmatic);
                xamlType = userType;
                break;

            case 38:   //  Microsoft.UI.Xaml.ElementHighContrastAdjustment
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.ElementHighContrastAdjustment.None);
                userType.AddEnumValue("Application", global::Microsoft.UI.Xaml.ElementHighContrastAdjustment.Application);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.ElementHighContrastAdjustment.Auto);
                xamlType = userType;
                break;

            case 39:   //  Double
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  Microsoft.UI.Xaml.Input.KeyTipPlacementMode
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Auto);
                userType.AddEnumValue("Bottom", global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Bottom);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Top);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Left);
                userType.AddEnumValue("Right", global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Right);
                userType.AddEnumValue("Center", global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Center);
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Hidden);
                xamlType = userType;
                break;

            case 41:   //  Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode.Auto);
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode.Hidden);
                xamlType = userType;
                break;

            case 42:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Input.KeyboardAccelerator>
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_42_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  Microsoft.UI.Xaml.Input.KeyboardAccelerator
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_43_KeyboardAccelerator;
                userType.AddMemberName("IsEnabled");
                userType.AddMemberName("Key");
                userType.AddMemberName("Modifiers");
                userType.AddMemberName("ScopeOwner");
                xamlType = userType;
                break;

            case 44:   //  Windows.System.VirtualKey
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Windows.System.VirtualKey.None);
                userType.AddEnumValue("LeftButton", global::Windows.System.VirtualKey.LeftButton);
                userType.AddEnumValue("RightButton", global::Windows.System.VirtualKey.RightButton);
                userType.AddEnumValue("Cancel", global::Windows.System.VirtualKey.Cancel);
                userType.AddEnumValue("MiddleButton", global::Windows.System.VirtualKey.MiddleButton);
                userType.AddEnumValue("XButton1", global::Windows.System.VirtualKey.XButton1);
                userType.AddEnumValue("XButton2", global::Windows.System.VirtualKey.XButton2);
                userType.AddEnumValue("Back", global::Windows.System.VirtualKey.Back);
                userType.AddEnumValue("Tab", global::Windows.System.VirtualKey.Tab);
                userType.AddEnumValue("Clear", global::Windows.System.VirtualKey.Clear);
                userType.AddEnumValue("Enter", global::Windows.System.VirtualKey.Enter);
                userType.AddEnumValue("Shift", global::Windows.System.VirtualKey.Shift);
                userType.AddEnumValue("Control", global::Windows.System.VirtualKey.Control);
                userType.AddEnumValue("Menu", global::Windows.System.VirtualKey.Menu);
                userType.AddEnumValue("Pause", global::Windows.System.VirtualKey.Pause);
                userType.AddEnumValue("CapitalLock", global::Windows.System.VirtualKey.CapitalLock);
                userType.AddEnumValue("Kana", global::Windows.System.VirtualKey.Kana);
                userType.AddEnumValue("Hangul", global::Windows.System.VirtualKey.Hangul);
                userType.AddEnumValue("Junja", global::Windows.System.VirtualKey.Junja);
                userType.AddEnumValue("Final", global::Windows.System.VirtualKey.Final);
                userType.AddEnumValue("Hanja", global::Windows.System.VirtualKey.Hanja);
                userType.AddEnumValue("Kanji", global::Windows.System.VirtualKey.Kanji);
                userType.AddEnumValue("Escape", global::Windows.System.VirtualKey.Escape);
                userType.AddEnumValue("Convert", global::Windows.System.VirtualKey.Convert);
                userType.AddEnumValue("NonConvert", global::Windows.System.VirtualKey.NonConvert);
                userType.AddEnumValue("Accept", global::Windows.System.VirtualKey.Accept);
                userType.AddEnumValue("ModeChange", global::Windows.System.VirtualKey.ModeChange);
                userType.AddEnumValue("Space", global::Windows.System.VirtualKey.Space);
                userType.AddEnumValue("PageUp", global::Windows.System.VirtualKey.PageUp);
                userType.AddEnumValue("PageDown", global::Windows.System.VirtualKey.PageDown);
                userType.AddEnumValue("End", global::Windows.System.VirtualKey.End);
                userType.AddEnumValue("Home", global::Windows.System.VirtualKey.Home);
                userType.AddEnumValue("Left", global::Windows.System.VirtualKey.Left);
                userType.AddEnumValue("Up", global::Windows.System.VirtualKey.Up);
                userType.AddEnumValue("Right", global::Windows.System.VirtualKey.Right);
                userType.AddEnumValue("Down", global::Windows.System.VirtualKey.Down);
                userType.AddEnumValue("Select", global::Windows.System.VirtualKey.Select);
                userType.AddEnumValue("Print", global::Windows.System.VirtualKey.Print);
                userType.AddEnumValue("Execute", global::Windows.System.VirtualKey.Execute);
                userType.AddEnumValue("Snapshot", global::Windows.System.VirtualKey.Snapshot);
                userType.AddEnumValue("Insert", global::Windows.System.VirtualKey.Insert);
                userType.AddEnumValue("Delete", global::Windows.System.VirtualKey.Delete);
                userType.AddEnumValue("Help", global::Windows.System.VirtualKey.Help);
                userType.AddEnumValue("Number0", global::Windows.System.VirtualKey.Number0);
                userType.AddEnumValue("Number1", global::Windows.System.VirtualKey.Number1);
                userType.AddEnumValue("Number2", global::Windows.System.VirtualKey.Number2);
                userType.AddEnumValue("Number3", global::Windows.System.VirtualKey.Number3);
                userType.AddEnumValue("Number4", global::Windows.System.VirtualKey.Number4);
                userType.AddEnumValue("Number5", global::Windows.System.VirtualKey.Number5);
                userType.AddEnumValue("Number6", global::Windows.System.VirtualKey.Number6);
                userType.AddEnumValue("Number7", global::Windows.System.VirtualKey.Number7);
                userType.AddEnumValue("Number8", global::Windows.System.VirtualKey.Number8);
                userType.AddEnumValue("Number9", global::Windows.System.VirtualKey.Number9);
                userType.AddEnumValue("A", global::Windows.System.VirtualKey.A);
                userType.AddEnumValue("B", global::Windows.System.VirtualKey.B);
                userType.AddEnumValue("C", global::Windows.System.VirtualKey.C);
                userType.AddEnumValue("D", global::Windows.System.VirtualKey.D);
                userType.AddEnumValue("E", global::Windows.System.VirtualKey.E);
                userType.AddEnumValue("F", global::Windows.System.VirtualKey.F);
                userType.AddEnumValue("G", global::Windows.System.VirtualKey.G);
                userType.AddEnumValue("H", global::Windows.System.VirtualKey.H);
                userType.AddEnumValue("I", global::Windows.System.VirtualKey.I);
                userType.AddEnumValue("J", global::Windows.System.VirtualKey.J);
                userType.AddEnumValue("K", global::Windows.System.VirtualKey.K);
                userType.AddEnumValue("L", global::Windows.System.VirtualKey.L);
                userType.AddEnumValue("M", global::Windows.System.VirtualKey.M);
                userType.AddEnumValue("N", global::Windows.System.VirtualKey.N);
                userType.AddEnumValue("O", global::Windows.System.VirtualKey.O);
                userType.AddEnumValue("P", global::Windows.System.VirtualKey.P);
                userType.AddEnumValue("Q", global::Windows.System.VirtualKey.Q);
                userType.AddEnumValue("R", global::Windows.System.VirtualKey.R);
                userType.AddEnumValue("S", global::Windows.System.VirtualKey.S);
                userType.AddEnumValue("T", global::Windows.System.VirtualKey.T);
                userType.AddEnumValue("U", global::Windows.System.VirtualKey.U);
                userType.AddEnumValue("V", global::Windows.System.VirtualKey.V);
                userType.AddEnumValue("W", global::Windows.System.VirtualKey.W);
                userType.AddEnumValue("X", global::Windows.System.VirtualKey.X);
                userType.AddEnumValue("Y", global::Windows.System.VirtualKey.Y);
                userType.AddEnumValue("Z", global::Windows.System.VirtualKey.Z);
                userType.AddEnumValue("LeftWindows", global::Windows.System.VirtualKey.LeftWindows);
                userType.AddEnumValue("RightWindows", global::Windows.System.VirtualKey.RightWindows);
                userType.AddEnumValue("Application", global::Windows.System.VirtualKey.Application);
                userType.AddEnumValue("Sleep", global::Windows.System.VirtualKey.Sleep);
                userType.AddEnumValue("NumberPad0", global::Windows.System.VirtualKey.NumberPad0);
                userType.AddEnumValue("NumberPad1", global::Windows.System.VirtualKey.NumberPad1);
                userType.AddEnumValue("NumberPad2", global::Windows.System.VirtualKey.NumberPad2);
                userType.AddEnumValue("NumberPad3", global::Windows.System.VirtualKey.NumberPad3);
                userType.AddEnumValue("NumberPad4", global::Windows.System.VirtualKey.NumberPad4);
                userType.AddEnumValue("NumberPad5", global::Windows.System.VirtualKey.NumberPad5);
                userType.AddEnumValue("NumberPad6", global::Windows.System.VirtualKey.NumberPad6);
                userType.AddEnumValue("NumberPad7", global::Windows.System.VirtualKey.NumberPad7);
                userType.AddEnumValue("NumberPad8", global::Windows.System.VirtualKey.NumberPad8);
                userType.AddEnumValue("NumberPad9", global::Windows.System.VirtualKey.NumberPad9);
                userType.AddEnumValue("Multiply", global::Windows.System.VirtualKey.Multiply);
                userType.AddEnumValue("Add", global::Windows.System.VirtualKey.Add);
                userType.AddEnumValue("Separator", global::Windows.System.VirtualKey.Separator);
                userType.AddEnumValue("Subtract", global::Windows.System.VirtualKey.Subtract);
                userType.AddEnumValue("Decimal", global::Windows.System.VirtualKey.Decimal);
                userType.AddEnumValue("Divide", global::Windows.System.VirtualKey.Divide);
                userType.AddEnumValue("F1", global::Windows.System.VirtualKey.F1);
                userType.AddEnumValue("F2", global::Windows.System.VirtualKey.F2);
                userType.AddEnumValue("F3", global::Windows.System.VirtualKey.F3);
                userType.AddEnumValue("F4", global::Windows.System.VirtualKey.F4);
                userType.AddEnumValue("F5", global::Windows.System.VirtualKey.F5);
                userType.AddEnumValue("F6", global::Windows.System.VirtualKey.F6);
                userType.AddEnumValue("F7", global::Windows.System.VirtualKey.F7);
                userType.AddEnumValue("F8", global::Windows.System.VirtualKey.F8);
                userType.AddEnumValue("F9", global::Windows.System.VirtualKey.F9);
                userType.AddEnumValue("F10", global::Windows.System.VirtualKey.F10);
                userType.AddEnumValue("F11", global::Windows.System.VirtualKey.F11);
                userType.AddEnumValue("F12", global::Windows.System.VirtualKey.F12);
                userType.AddEnumValue("F13", global::Windows.System.VirtualKey.F13);
                userType.AddEnumValue("F14", global::Windows.System.VirtualKey.F14);
                userType.AddEnumValue("F15", global::Windows.System.VirtualKey.F15);
                userType.AddEnumValue("F16", global::Windows.System.VirtualKey.F16);
                userType.AddEnumValue("F17", global::Windows.System.VirtualKey.F17);
                userType.AddEnumValue("F18", global::Windows.System.VirtualKey.F18);
                userType.AddEnumValue("F19", global::Windows.System.VirtualKey.F19);
                userType.AddEnumValue("F20", global::Windows.System.VirtualKey.F20);
                userType.AddEnumValue("F21", global::Windows.System.VirtualKey.F21);
                userType.AddEnumValue("F22", global::Windows.System.VirtualKey.F22);
                userType.AddEnumValue("F23", global::Windows.System.VirtualKey.F23);
                userType.AddEnumValue("F24", global::Windows.System.VirtualKey.F24);
                userType.AddEnumValue("NavigationView", global::Windows.System.VirtualKey.NavigationView);
                userType.AddEnumValue("NavigationMenu", global::Windows.System.VirtualKey.NavigationMenu);
                userType.AddEnumValue("NavigationUp", global::Windows.System.VirtualKey.NavigationUp);
                userType.AddEnumValue("NavigationDown", global::Windows.System.VirtualKey.NavigationDown);
                userType.AddEnumValue("NavigationLeft", global::Windows.System.VirtualKey.NavigationLeft);
                userType.AddEnumValue("NavigationRight", global::Windows.System.VirtualKey.NavigationRight);
                userType.AddEnumValue("NavigationAccept", global::Windows.System.VirtualKey.NavigationAccept);
                userType.AddEnumValue("NavigationCancel", global::Windows.System.VirtualKey.NavigationCancel);
                userType.AddEnumValue("NumberKeyLock", global::Windows.System.VirtualKey.NumberKeyLock);
                userType.AddEnumValue("Scroll", global::Windows.System.VirtualKey.Scroll);
                userType.AddEnumValue("LeftShift", global::Windows.System.VirtualKey.LeftShift);
                userType.AddEnumValue("RightShift", global::Windows.System.VirtualKey.RightShift);
                userType.AddEnumValue("LeftControl", global::Windows.System.VirtualKey.LeftControl);
                userType.AddEnumValue("RightControl", global::Windows.System.VirtualKey.RightControl);
                userType.AddEnumValue("LeftMenu", global::Windows.System.VirtualKey.LeftMenu);
                userType.AddEnumValue("RightMenu", global::Windows.System.VirtualKey.RightMenu);
                userType.AddEnumValue("GoBack", global::Windows.System.VirtualKey.GoBack);
                userType.AddEnumValue("GoForward", global::Windows.System.VirtualKey.GoForward);
                userType.AddEnumValue("Refresh", global::Windows.System.VirtualKey.Refresh);
                userType.AddEnumValue("Stop", global::Windows.System.VirtualKey.Stop);
                userType.AddEnumValue("Search", global::Windows.System.VirtualKey.Search);
                userType.AddEnumValue("Favorites", global::Windows.System.VirtualKey.Favorites);
                userType.AddEnumValue("GoHome", global::Windows.System.VirtualKey.GoHome);
                userType.AddEnumValue("GamepadA", global::Windows.System.VirtualKey.GamepadA);
                userType.AddEnumValue("GamepadB", global::Windows.System.VirtualKey.GamepadB);
                userType.AddEnumValue("GamepadX", global::Windows.System.VirtualKey.GamepadX);
                userType.AddEnumValue("GamepadY", global::Windows.System.VirtualKey.GamepadY);
                userType.AddEnumValue("GamepadRightShoulder", global::Windows.System.VirtualKey.GamepadRightShoulder);
                userType.AddEnumValue("GamepadLeftShoulder", global::Windows.System.VirtualKey.GamepadLeftShoulder);
                userType.AddEnumValue("GamepadLeftTrigger", global::Windows.System.VirtualKey.GamepadLeftTrigger);
                userType.AddEnumValue("GamepadRightTrigger", global::Windows.System.VirtualKey.GamepadRightTrigger);
                userType.AddEnumValue("GamepadDPadUp", global::Windows.System.VirtualKey.GamepadDPadUp);
                userType.AddEnumValue("GamepadDPadDown", global::Windows.System.VirtualKey.GamepadDPadDown);
                userType.AddEnumValue("GamepadDPadLeft", global::Windows.System.VirtualKey.GamepadDPadLeft);
                userType.AddEnumValue("GamepadDPadRight", global::Windows.System.VirtualKey.GamepadDPadRight);
                userType.AddEnumValue("GamepadMenu", global::Windows.System.VirtualKey.GamepadMenu);
                userType.AddEnumValue("GamepadView", global::Windows.System.VirtualKey.GamepadView);
                userType.AddEnumValue("GamepadLeftThumbstickButton", global::Windows.System.VirtualKey.GamepadLeftThumbstickButton);
                userType.AddEnumValue("GamepadRightThumbstickButton", global::Windows.System.VirtualKey.GamepadRightThumbstickButton);
                userType.AddEnumValue("GamepadLeftThumbstickUp", global::Windows.System.VirtualKey.GamepadLeftThumbstickUp);
                userType.AddEnumValue("GamepadLeftThumbstickDown", global::Windows.System.VirtualKey.GamepadLeftThumbstickDown);
                userType.AddEnumValue("GamepadLeftThumbstickRight", global::Windows.System.VirtualKey.GamepadLeftThumbstickRight);
                userType.AddEnumValue("GamepadLeftThumbstickLeft", global::Windows.System.VirtualKey.GamepadLeftThumbstickLeft);
                userType.AddEnumValue("GamepadRightThumbstickUp", global::Windows.System.VirtualKey.GamepadRightThumbstickUp);
                userType.AddEnumValue("GamepadRightThumbstickDown", global::Windows.System.VirtualKey.GamepadRightThumbstickDown);
                userType.AddEnumValue("GamepadRightThumbstickRight", global::Windows.System.VirtualKey.GamepadRightThumbstickRight);
                userType.AddEnumValue("GamepadRightThumbstickLeft", global::Windows.System.VirtualKey.GamepadRightThumbstickLeft);
                xamlType = userType;
                break;

            case 45:   //  Windows.System.VirtualKeyModifiers
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Windows.System.VirtualKeyModifiers.None);
                userType.AddEnumValue("Control", global::Windows.System.VirtualKeyModifiers.Control);
                userType.AddEnumValue("Menu", global::Windows.System.VirtualKeyModifiers.Menu);
                userType.AddEnumValue("Shift", global::Windows.System.VirtualKeyModifiers.Shift);
                userType.AddEnumValue("Windows", global::Windows.System.VirtualKeyModifiers.Windows);
                xamlType = userType;
                break;

            case 46:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.XamlLight>
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_46_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  Microsoft.UI.Xaml.Media.XamlLight
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_47_XamlLight;
                xamlType = userType;
                break;

            case 48:   //  Microsoft.UI.Xaml.Input.ManipulationModes
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Input.ManipulationModes.None);
                userType.AddEnumValue("TranslateX", global::Microsoft.UI.Xaml.Input.ManipulationModes.TranslateX);
                userType.AddEnumValue("TranslateY", global::Microsoft.UI.Xaml.Input.ManipulationModes.TranslateY);
                userType.AddEnumValue("TranslateRailsX", global::Microsoft.UI.Xaml.Input.ManipulationModes.TranslateRailsX);
                userType.AddEnumValue("TranslateRailsY", global::Microsoft.UI.Xaml.Input.ManipulationModes.TranslateRailsY);
                userType.AddEnumValue("Rotate", global::Microsoft.UI.Xaml.Input.ManipulationModes.Rotate);
                userType.AddEnumValue("Scale", global::Microsoft.UI.Xaml.Input.ManipulationModes.Scale);
                userType.AddEnumValue("TranslateInertia", global::Microsoft.UI.Xaml.Input.ManipulationModes.TranslateInertia);
                userType.AddEnumValue("RotateInertia", global::Microsoft.UI.Xaml.Input.ManipulationModes.RotateInertia);
                userType.AddEnumValue("ScaleInertia", global::Microsoft.UI.Xaml.Input.ManipulationModes.ScaleInertia);
                userType.AddEnumValue("All", global::Microsoft.UI.Xaml.Input.ManipulationModes.All);
                userType.AddEnumValue("System", global::Microsoft.UI.Xaml.Input.ManipulationModes.System);
                xamlType = userType;
                break;

            case 49:   //  Microsoft.UI.Xaml.ScalarTransition
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 50:   //  System.Collections.Generic.IReadOnlyList`1<Microsoft.UI.Xaml.Input.Pointer>
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  Microsoft.UI.Xaml.Media.Projection
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 52:   //  Microsoft.UI.Xaml.Media.Transform
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.GeneralTransform"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 53:   //  Microsoft.UI.Xaml.Media.GeneralTransform
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 54:   //  Windows.Foundation.Point
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  Single
                xamlType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 56:   //  Microsoft.UI.Xaml.Vector3Transition
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  Microsoft.UI.Xaml.Media.Shadow
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 58:   //  Microsoft.UI.Xaml.Input.KeyboardNavigationMode
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Local", global::Microsoft.UI.Xaml.Input.KeyboardNavigationMode.Local);
                userType.AddEnumValue("Cycle", global::Microsoft.UI.Xaml.Input.KeyboardNavigationMode.Cycle);
                userType.AddEnumValue("Once", global::Microsoft.UI.Xaml.Input.KeyboardNavigationMode.Once);
                xamlType = userType;
                break;

            case 59:   //  Microsoft.UI.Xaml.Media.Media3D.Transform3D
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  System.Numerics.Matrix4x4
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  Microsoft.UI.Xaml.Media.Animation.TransitionCollection
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_61_TransitionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  Microsoft.UI.Xaml.Media.Animation.Transition
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 63:   //  Microsoft.UI.Xaml.Visibility
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Visibility.Visible);
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Visibility.Collapsed);
                xamlType = userType;
                break;

            case 64:   //  Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy.Auto);
                userType.AddEnumValue("Projection", global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy.Projection);
                userType.AddEnumValue("NavigationDirectionDistance", global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy.NavigationDirectionDistance);
                userType.AddEnumValue("RectilinearDistance", global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy.RectilinearDistance);
                xamlType = userType;
                break;

            case 65:   //  Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode.Auto);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode.Disabled);
                xamlType = userType;
                break;

            case 66:   //  Microsoft.UI.Xaml.XamlRoot
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 67:   //  Microsoft.UI.Xaml.Controls.Orientation
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Vertical", global::Microsoft.UI.Xaml.Controls.Orientation.Vertical);
                userType.AddEnumValue("Horizontal", global::Microsoft.UI.Xaml.Controls.Orientation.Horizontal);
                xamlType = userType;
                break;

            case 68:   //  Microsoft.UI.Xaml.HorizontalAlignment
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.HorizontalAlignment.Left);
                userType.AddEnumValue("Center", global::Microsoft.UI.Xaml.HorizontalAlignment.Center);
                userType.AddEnumValue("Right", global::Microsoft.UI.Xaml.HorizontalAlignment.Right);
                userType.AddEnumValue("Stretch", global::Microsoft.UI.Xaml.HorizontalAlignment.Stretch);
                xamlType = userType;
                break;

            case 69:   //  Microsoft.UI.Xaml.VerticalAlignment
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.VerticalAlignment.Top);
                userType.AddEnumValue("Center", global::Microsoft.UI.Xaml.VerticalAlignment.Center);
                userType.AddEnumValue("Bottom", global::Microsoft.UI.Xaml.VerticalAlignment.Bottom);
                userType.AddEnumValue("Stretch", global::Microsoft.UI.Xaml.VerticalAlignment.Stretch);
                xamlType = userType;
                break;

            case 70:   //  Microsoft.UI.Xaml.Controls.BackgroundSizing
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("InnerBorderEdge", global::Microsoft.UI.Xaml.Controls.BackgroundSizing.InnerBorderEdge);
                userType.AddEnumValue("OuterBorderEdge", global::Microsoft.UI.Xaml.Controls.BackgroundSizing.OuterBorderEdge);
                xamlType = userType;
                break;

            case 71:   //  Microsoft.UI.Xaml.Media.Brush
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 72:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 73:   //  Microsoft.UI.Xaml.CornerRadius
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 74:   //  Microsoft.UI.Xaml.BrushTransition
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 75:   //  Microsoft.UI.Xaml.ElementTheme
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Microsoft.UI.Xaml.ElementTheme.Default);
                userType.AddEnumValue("Light", global::Microsoft.UI.Xaml.ElementTheme.Light);
                userType.AddEnumValue("Dark", global::Microsoft.UI.Xaml.ElementTheme.Dark);
                xamlType = userType;
                break;

            case 76:   //  Microsoft.UI.Xaml.FlowDirection
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("LeftToRight", global::Microsoft.UI.Xaml.FlowDirection.LeftToRight);
                userType.AddEnumValue("RightToLeft", global::Microsoft.UI.Xaml.FlowDirection.RightToLeft);
                xamlType = userType;
                break;

            case 77:   //  Microsoft.UI.Xaml.Style
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_77_Style;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Style.Setters");
                userType.AddMemberName("Setters");
                xamlType = userType;
                break;

            case 78:   //  Microsoft.UI.Xaml.SetterBaseCollection
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_78_SetterBaseCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 79:   //  Microsoft.UI.Xaml.SetterBase
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("IsSealed");
                xamlType = userType;
                break;

            case 80:   //  Microsoft.UI.Xaml.TriggerCollection
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_80_TriggerCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 81:   //  Microsoft.UI.Xaml.TriggerBase
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 82:   //  Microsoft.UI.Xaml.Controls.Button
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase"));
                userType.Activator = Activate_82_Button;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ContentControl.Content");
                userType.AddMemberName("Flyout");
                xamlType = userType;
                break;

            case 83:   //  Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ContentControl.Content");
                userType.AddMemberName("ClickMode");
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("IsPointerOver");
                userType.AddMemberName("IsPressed");
                xamlType = userType;
                break;

            case 84:   //  Microsoft.UI.Xaml.Controls.ContentControl
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_84_ContentControl;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ContentControl.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("ContentTemplateRoot");
                userType.AddMemberName("ContentTemplateSelector");
                userType.AddMemberName("ContentTransitions");
                xamlType = userType;
                break;

            case 85:   //  Microsoft.UI.Xaml.Controls.Control
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.AddMemberName("Background");
                userType.AddMemberName("BackgroundSizing");
                userType.AddMemberName("BorderBrush");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("CharacterSpacing");
                userType.AddMemberName("CornerRadius");
                userType.AddMemberName("DefaultStyleResourceUri");
                userType.AddMemberName("ElementSoundMode");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontStretch");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("HorizontalContentAlignment");
                userType.AddMemberName("IsEnabled");
                userType.AddMemberName("IsFocusEngaged");
                userType.AddMemberName("IsFocusEngagementEnabled");
                userType.AddMemberName("IsTextScaleFactorEnabled");
                userType.AddMemberName("Padding");
                userType.AddMemberName("RequiresPointer");
                userType.AddMemberName("TabNavigation");
                userType.AddMemberName("Template");
                userType.AddMemberName("VerticalContentAlignment");
                userType.AddMemberName("IsTemplateFocusTarget");
                userType.AddMemberName("IsTemplateKeyTipTarget");
                xamlType = userType;
                break;

            case 86:   //  Microsoft.UI.Xaml.Controls.ClickMode
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Release", global::Microsoft.UI.Xaml.Controls.ClickMode.Release);
                userType.AddEnumValue("Press", global::Microsoft.UI.Xaml.Controls.ClickMode.Press);
                userType.AddEnumValue("Hover", global::Microsoft.UI.Xaml.Controls.ClickMode.Hover);
                xamlType = userType;
                break;

            case 87:   //  System.Windows.Input.ICommand
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 88:   //  Microsoft.UI.Xaml.DataTemplate
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkTemplate"));
                userType.Activator = Activate_88_DataTemplate;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.DataTemplate.Template");
                userType.AddMemberName("Template");
                xamlType = userType;
                break;

            case 89:   //  Microsoft.UI.Xaml.FrameworkTemplate
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetContentPropertyName("Microsoft.UI.Xaml.FrameworkTemplate.Template");
                userType.AddMemberName("Template");
                xamlType = userType;
                break;

            case 90:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 91:   //  Microsoft.UI.Xaml.ElementSoundMode
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Microsoft.UI.Xaml.ElementSoundMode.Default);
                userType.AddEnumValue("FocusOnly", global::Microsoft.UI.Xaml.ElementSoundMode.FocusOnly);
                userType.AddEnumValue("Off", global::Microsoft.UI.Xaml.ElementSoundMode.Off);
                xamlType = userType;
                break;

            case 92:   //  Microsoft.UI.Xaml.Media.FontFamily
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 93:   //  Windows.UI.Text.FontStretch
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Undefined", global::Windows.UI.Text.FontStretch.Undefined);
                userType.AddEnumValue("UltraCondensed", global::Windows.UI.Text.FontStretch.UltraCondensed);
                userType.AddEnumValue("ExtraCondensed", global::Windows.UI.Text.FontStretch.ExtraCondensed);
                userType.AddEnumValue("Condensed", global::Windows.UI.Text.FontStretch.Condensed);
                userType.AddEnumValue("SemiCondensed", global::Windows.UI.Text.FontStretch.SemiCondensed);
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStretch.Normal);
                userType.AddEnumValue("SemiExpanded", global::Windows.UI.Text.FontStretch.SemiExpanded);
                userType.AddEnumValue("Expanded", global::Windows.UI.Text.FontStretch.Expanded);
                userType.AddEnumValue("ExtraExpanded", global::Windows.UI.Text.FontStretch.ExtraExpanded);
                userType.AddEnumValue("UltraExpanded", global::Windows.UI.Text.FontStretch.UltraExpanded);
                xamlType = userType;
                break;

            case 94:   //  Windows.UI.Text.FontStyle
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 95:   //  Windows.UI.Text.FontWeight
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 96:   //  Microsoft.UI.Xaml.Controls.RequiresPointer
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.RequiresPointer.Never);
                userType.AddEnumValue("WhenEngaged", global::Microsoft.UI.Xaml.Controls.RequiresPointer.WhenEngaged);
                userType.AddEnumValue("WhenFocused", global::Microsoft.UI.Xaml.Controls.RequiresPointer.WhenFocused);
                xamlType = userType;
                break;

            case 97:   //  Microsoft.UI.Xaml.Controls.ControlTemplate
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkTemplate"));
                userType.Activator = Activate_97_ControlTemplate;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ControlTemplate.Template");
                userType.AddMemberName("Template");
                xamlType = userType;
                break;

            case 98:   //  AuthentiKitTrimCalibration.MainWindow
                userType = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_98_MainWindow;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Window.Content");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Application_Resources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            return that.Resources;
        }
        private void set_0_Application_Resources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            that.Resources = (global::Microsoft.UI.Xaml.ResourceDictionary)Value;
        }
        private object get_1_Application_DebugSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            return that.DebugSettings;
        }
        private object get_2_Application_FocusVisualKind(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            return that.FocusVisualKind;
        }
        private void set_2_Application_FocusVisualKind(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            that.FocusVisualKind = (global::Microsoft.UI.Xaml.FocusVisualKind)Value;
        }
        private object get_3_Application_HighContrastAdjustment(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            return that.HighContrastAdjustment;
        }
        private void set_3_Application_HighContrastAdjustment(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            that.HighContrastAdjustment = (global::Microsoft.UI.Xaml.ApplicationHighContrastAdjustment)Value;
        }
        private object get_4_Application_RequestedTheme(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            return that.RequestedTheme;
        }
        private void set_4_Application_RequestedTheme(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Application)instance;
            that.RequestedTheme = (global::Microsoft.UI.Xaml.ApplicationTheme)Value;
        }
        private object get_5_ResourceDictionary_MergedDictionaries(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.ResourceDictionary)instance;
            return that.MergedDictionaries;
        }
        private object get_6_ResourceDictionary_Keys(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.ResourceDictionary)instance;
            return that.Keys;
        }
        private object get_7_ResourceDictionary_Values(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.ResourceDictionary)instance;
            return that.Values;
        }
        private object get_8_ResourceDictionary_Count(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.ResourceDictionary)instance;
            return that.Count;
        }
        private object get_9_ResourceDictionary_IsReadOnly(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.ResourceDictionary)instance;
            return that.IsReadOnly;
        }
        private object get_10_ResourceDictionary_Source(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.ResourceDictionary)instance;
            return that.Source;
        }
        private void set_10_ResourceDictionary_Source(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.ResourceDictionary)instance;
            that.Source = (global::System.Uri)Value;
        }
        private object get_11_ResourceDictionary_ThemeDictionaries(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.ResourceDictionary)instance;
            return that.ThemeDictionaries;
        }
        private object get_12_DependencyObject_Dispatcher(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.DependencyObject)instance;
            return that.Dispatcher;
        }
        private object get_13_DependencyObject_DispatcherQueue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.DependencyObject)instance;
            return that.DispatcherQueue;
        }
        private object get_14_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_14_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_15_Window_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.Content;
        }
        private void set_15_Window_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_16_Window_Bounds(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.Bounds;
        }
        private object get_17_Window_Compositor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.Compositor;
        }
        private object get_18_Window_CoreWindow(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.CoreWindow;
        }
        private object get_19_Window_Dispatcher(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.Dispatcher;
        }
        private object get_20_Window_DispatcherQueue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.DispatcherQueue;
        }
        private object get_21_Window_ExtendsContentIntoTitleBar(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.ExtendsContentIntoTitleBar;
        }
        private void set_21_Window_ExtendsContentIntoTitleBar(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            that.ExtendsContentIntoTitleBar = (global::System.Boolean)Value;
        }
        private object get_22_Window_Title(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.Title;
        }
        private void set_22_Window_Title(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_23_Window_Visible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Window)instance;
            return that.Visible;
        }
        private object get_24_Panel_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Panel)instance;
            return that.Children;
        }
        private object get_25_UIElement_AccessKey(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.AccessKey;
        }
        private void set_25_UIElement_AccessKey(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.AccessKey = (global::System.String)Value;
        }
        private object get_26_UIElement_AccessKeyScopeOwner(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.AccessKeyScopeOwner;
        }
        private void set_26_UIElement_AccessKeyScopeOwner(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.AccessKeyScopeOwner = (global::Microsoft.UI.Xaml.DependencyObject)Value;
        }
        private object get_27_UIElement_ActualOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.ActualOffset;
        }
        private object get_28_UIElement_ActualSize(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.ActualSize;
        }
        private object get_29_UIElement_AllowDrop(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.AllowDrop;
        }
        private void set_29_UIElement_AllowDrop(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.AllowDrop = (global::System.Boolean)Value;
        }
        private object get_30_UIElement_CacheMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.CacheMode;
        }
        private void set_30_UIElement_CacheMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.CacheMode = (global::Microsoft.UI.Xaml.Media.CacheMode)Value;
        }
        private object get_31_UIElement_CanBeScrollAnchor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.CanBeScrollAnchor;
        }
        private void set_31_UIElement_CanBeScrollAnchor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.CanBeScrollAnchor = (global::System.Boolean)Value;
        }
        private object get_32_UIElement_CanDrag(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.CanDrag;
        }
        private void set_32_UIElement_CanDrag(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.CanDrag = (global::System.Boolean)Value;
        }
        private object get_33_UIElement_CenterPoint(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.CenterPoint;
        }
        private void set_33_UIElement_CenterPoint(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.CenterPoint = (global::System.Numerics.Vector3)Value;
        }
        private object get_34_UIElement_Clip(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Clip;
        }
        private void set_34_UIElement_Clip(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Clip = (global::Microsoft.UI.Xaml.Media.RectangleGeometry)Value;
        }
        private object get_35_UIElement_CompositeMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.CompositeMode;
        }
        private void set_35_UIElement_CompositeMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.CompositeMode = (global::Microsoft.UI.Xaml.Media.ElementCompositeMode)Value;
        }
        private object get_36_UIElement_ContextFlyout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.ContextFlyout;
        }
        private void set_36_UIElement_ContextFlyout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.ContextFlyout = (global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase)Value;
        }
        private object get_37_UIElement_DesiredSize(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.DesiredSize;
        }
        private object get_38_UIElement_ExitDisplayModeOnAccessKeyInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.ExitDisplayModeOnAccessKeyInvoked;
        }
        private void set_38_UIElement_ExitDisplayModeOnAccessKeyInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.ExitDisplayModeOnAccessKeyInvoked = (global::System.Boolean)Value;
        }
        private object get_39_UIElement_FocusState(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.FocusState;
        }
        private object get_40_UIElement_HighContrastAdjustment(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.HighContrastAdjustment;
        }
        private void set_40_UIElement_HighContrastAdjustment(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.HighContrastAdjustment = (global::Microsoft.UI.Xaml.ElementHighContrastAdjustment)Value;
        }
        private object get_41_UIElement_IsAccessKeyScope(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.IsAccessKeyScope;
        }
        private void set_41_UIElement_IsAccessKeyScope(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.IsAccessKeyScope = (global::System.Boolean)Value;
        }
        private object get_42_UIElement_IsDoubleTapEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.IsDoubleTapEnabled;
        }
        private void set_42_UIElement_IsDoubleTapEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.IsDoubleTapEnabled = (global::System.Boolean)Value;
        }
        private object get_43_UIElement_IsHitTestVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.IsHitTestVisible;
        }
        private void set_43_UIElement_IsHitTestVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.IsHitTestVisible = (global::System.Boolean)Value;
        }
        private object get_44_UIElement_IsHoldingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.IsHoldingEnabled;
        }
        private void set_44_UIElement_IsHoldingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.IsHoldingEnabled = (global::System.Boolean)Value;
        }
        private object get_45_UIElement_IsRightTapEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.IsRightTapEnabled;
        }
        private void set_45_UIElement_IsRightTapEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.IsRightTapEnabled = (global::System.Boolean)Value;
        }
        private object get_46_UIElement_IsTabStop(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.IsTabStop;
        }
        private void set_46_UIElement_IsTabStop(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.IsTabStop = (global::System.Boolean)Value;
        }
        private object get_47_UIElement_IsTapEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.IsTapEnabled;
        }
        private void set_47_UIElement_IsTapEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.IsTapEnabled = (global::System.Boolean)Value;
        }
        private object get_48_UIElement_KeyTipHorizontalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.KeyTipHorizontalOffset;
        }
        private void set_48_UIElement_KeyTipHorizontalOffset(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.KeyTipHorizontalOffset = (global::System.Double)Value;
        }
        private object get_49_UIElement_KeyTipPlacementMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.KeyTipPlacementMode;
        }
        private void set_49_UIElement_KeyTipPlacementMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.KeyTipPlacementMode = (global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode)Value;
        }
        private object get_50_UIElement_KeyTipTarget(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.KeyTipTarget;
        }
        private void set_50_UIElement_KeyTipTarget(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.KeyTipTarget = (global::Microsoft.UI.Xaml.DependencyObject)Value;
        }
        private object get_51_UIElement_KeyTipVerticalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.KeyTipVerticalOffset;
        }
        private void set_51_UIElement_KeyTipVerticalOffset(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.KeyTipVerticalOffset = (global::System.Double)Value;
        }
        private object get_52_UIElement_KeyboardAcceleratorPlacementMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.KeyboardAcceleratorPlacementMode;
        }
        private void set_52_UIElement_KeyboardAcceleratorPlacementMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.KeyboardAcceleratorPlacementMode = (global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode)Value;
        }
        private object get_53_UIElement_KeyboardAcceleratorPlacementTarget(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.KeyboardAcceleratorPlacementTarget;
        }
        private void set_53_UIElement_KeyboardAcceleratorPlacementTarget(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.KeyboardAcceleratorPlacementTarget = (global::Microsoft.UI.Xaml.DependencyObject)Value;
        }
        private object get_54_UIElement_KeyboardAccelerators(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.KeyboardAccelerators;
        }
        private object get_55_KeyboardAccelerator_IsEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)instance;
            return that.IsEnabled;
        }
        private void set_55_KeyboardAccelerator_IsEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)instance;
            that.IsEnabled = (global::System.Boolean)Value;
        }
        private object get_56_KeyboardAccelerator_Key(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)instance;
            return that.Key;
        }
        private void set_56_KeyboardAccelerator_Key(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)instance;
            that.Key = (global::Windows.System.VirtualKey)Value;
        }
        private object get_57_KeyboardAccelerator_Modifiers(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)instance;
            return that.Modifiers;
        }
        private void set_57_KeyboardAccelerator_Modifiers(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)instance;
            that.Modifiers = (global::Windows.System.VirtualKeyModifiers)Value;
        }
        private object get_58_KeyboardAccelerator_ScopeOwner(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)instance;
            return that.ScopeOwner;
        }
        private void set_58_KeyboardAccelerator_ScopeOwner(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator)instance;
            that.ScopeOwner = (global::Microsoft.UI.Xaml.DependencyObject)Value;
        }
        private object get_59_UIElement_Lights(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Lights;
        }
        private object get_60_UIElement_ManipulationMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.ManipulationMode;
        }
        private void set_60_UIElement_ManipulationMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.ManipulationMode = (global::Microsoft.UI.Xaml.Input.ManipulationModes)Value;
        }
        private object get_61_UIElement_Opacity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Opacity;
        }
        private void set_61_UIElement_Opacity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Opacity = (global::System.Double)Value;
        }
        private object get_62_UIElement_OpacityTransition(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.OpacityTransition;
        }
        private void set_62_UIElement_OpacityTransition(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.OpacityTransition = (global::Microsoft.UI.Xaml.ScalarTransition)Value;
        }
        private object get_63_UIElement_PointerCaptures(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.PointerCaptures;
        }
        private object get_64_UIElement_Projection(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Projection;
        }
        private void set_64_UIElement_Projection(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Projection = (global::Microsoft.UI.Xaml.Media.Projection)Value;
        }
        private object get_65_UIElement_RasterizationScale(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.RasterizationScale;
        }
        private void set_65_UIElement_RasterizationScale(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.RasterizationScale = (global::System.Double)Value;
        }
        private object get_66_UIElement_RenderSize(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.RenderSize;
        }
        private object get_67_UIElement_RenderTransform(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.RenderTransform;
        }
        private void set_67_UIElement_RenderTransform(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.RenderTransform = (global::Microsoft.UI.Xaml.Media.Transform)Value;
        }
        private object get_68_UIElement_RenderTransformOrigin(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.RenderTransformOrigin;
        }
        private void set_68_UIElement_RenderTransformOrigin(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.RenderTransformOrigin = (global::Windows.Foundation.Point)Value;
        }
        private object get_69_UIElement_Rotation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Rotation;
        }
        private void set_69_UIElement_Rotation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Rotation = (global::System.Single)Value;
        }
        private object get_70_UIElement_RotationAxis(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.RotationAxis;
        }
        private void set_70_UIElement_RotationAxis(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.RotationAxis = (global::System.Numerics.Vector3)Value;
        }
        private object get_71_UIElement_RotationTransition(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.RotationTransition;
        }
        private void set_71_UIElement_RotationTransition(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.RotationTransition = (global::Microsoft.UI.Xaml.ScalarTransition)Value;
        }
        private object get_72_UIElement_Scale(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Scale;
        }
        private void set_72_UIElement_Scale(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Scale = (global::System.Numerics.Vector3)Value;
        }
        private object get_73_UIElement_ScaleTransition(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.ScaleTransition;
        }
        private void set_73_UIElement_ScaleTransition(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.ScaleTransition = (global::Microsoft.UI.Xaml.Vector3Transition)Value;
        }
        private object get_74_UIElement_Shadow(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Shadow;
        }
        private void set_74_UIElement_Shadow(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Shadow = (global::Microsoft.UI.Xaml.Media.Shadow)Value;
        }
        private object get_75_UIElement_TabFocusNavigation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.TabFocusNavigation;
        }
        private void set_75_UIElement_TabFocusNavigation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.TabFocusNavigation = (global::Microsoft.UI.Xaml.Input.KeyboardNavigationMode)Value;
        }
        private object get_76_UIElement_TabIndex(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.TabIndex;
        }
        private void set_76_UIElement_TabIndex(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.TabIndex = (global::System.Int32)Value;
        }
        private object get_77_UIElement_Transform3D(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Transform3D;
        }
        private void set_77_UIElement_Transform3D(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Transform3D = (global::Microsoft.UI.Xaml.Media.Media3D.Transform3D)Value;
        }
        private object get_78_UIElement_TransformMatrix(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.TransformMatrix;
        }
        private void set_78_UIElement_TransformMatrix(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.TransformMatrix = (global::System.Numerics.Matrix4x4)Value;
        }
        private object get_79_UIElement_Transitions(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Transitions;
        }
        private void set_79_UIElement_Transitions(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Transitions = (global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection)Value;
        }
        private object get_80_UIElement_Translation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Translation;
        }
        private void set_80_UIElement_Translation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Translation = (global::System.Numerics.Vector3)Value;
        }
        private object get_81_UIElement_TranslationTransition(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.TranslationTransition;
        }
        private void set_81_UIElement_TranslationTransition(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.TranslationTransition = (global::Microsoft.UI.Xaml.Vector3Transition)Value;
        }
        private object get_82_UIElement_UseLayoutRounding(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.UseLayoutRounding;
        }
        private void set_82_UIElement_UseLayoutRounding(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.UseLayoutRounding = (global::System.Boolean)Value;
        }
        private object get_83_UIElement_UseSystemFocusVisuals(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.UseSystemFocusVisuals;
        }
        private void set_83_UIElement_UseSystemFocusVisuals(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.UseSystemFocusVisuals = (global::System.Boolean)Value;
        }
        private object get_84_UIElement_Visibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.Visibility;
        }
        private void set_84_UIElement_Visibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.Visibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_85_UIElement_XYFocusDown(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusDown;
        }
        private void set_85_UIElement_XYFocusDown(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusDown = (global::Microsoft.UI.Xaml.DependencyObject)Value;
        }
        private object get_86_UIElement_XYFocusDownNavigationStrategy(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusDownNavigationStrategy;
        }
        private void set_86_UIElement_XYFocusDownNavigationStrategy(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusDownNavigationStrategy = (global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy)Value;
        }
        private object get_87_UIElement_XYFocusKeyboardNavigation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusKeyboardNavigation;
        }
        private void set_87_UIElement_XYFocusKeyboardNavigation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusKeyboardNavigation = (global::Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode)Value;
        }
        private object get_88_UIElement_XYFocusLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusLeft;
        }
        private void set_88_UIElement_XYFocusLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusLeft = (global::Microsoft.UI.Xaml.DependencyObject)Value;
        }
        private object get_89_UIElement_XYFocusLeftNavigationStrategy(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusLeftNavigationStrategy;
        }
        private void set_89_UIElement_XYFocusLeftNavigationStrategy(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusLeftNavigationStrategy = (global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy)Value;
        }
        private object get_90_UIElement_XYFocusRight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusRight;
        }
        private void set_90_UIElement_XYFocusRight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusRight = (global::Microsoft.UI.Xaml.DependencyObject)Value;
        }
        private object get_91_UIElement_XYFocusRightNavigationStrategy(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusRightNavigationStrategy;
        }
        private void set_91_UIElement_XYFocusRightNavigationStrategy(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusRightNavigationStrategy = (global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy)Value;
        }
        private object get_92_UIElement_XYFocusUp(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusUp;
        }
        private void set_92_UIElement_XYFocusUp(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusUp = (global::Microsoft.UI.Xaml.DependencyObject)Value;
        }
        private object get_93_UIElement_XYFocusUpNavigationStrategy(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XYFocusUpNavigationStrategy;
        }
        private void set_93_UIElement_XYFocusUpNavigationStrategy(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XYFocusUpNavigationStrategy = (global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy)Value;
        }
        private object get_94_UIElement_XamlRoot(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            return that.XamlRoot;
        }
        private void set_94_UIElement_XamlRoot(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.UIElement)instance;
            that.XamlRoot = (global::Microsoft.UI.Xaml.XamlRoot)Value;
        }
        private object get_95_StackPanel_Orientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.Orientation;
        }
        private void set_95_StackPanel_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_96_FrameworkElement_HorizontalAlignment(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.HorizontalAlignment;
        }
        private void set_96_FrameworkElement_HorizontalAlignment(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.HorizontalAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_97_FrameworkElement_VerticalAlignment(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.VerticalAlignment;
        }
        private void set_97_FrameworkElement_VerticalAlignment(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.VerticalAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_98_StackPanel_AreHorizontalSnapPointsRegular(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.AreHorizontalSnapPointsRegular;
        }
        private object get_99_StackPanel_AreScrollSnapPointsRegular(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.AreScrollSnapPointsRegular;
        }
        private void set_99_StackPanel_AreScrollSnapPointsRegular(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            that.AreScrollSnapPointsRegular = (global::System.Boolean)Value;
        }
        private object get_100_StackPanel_AreVerticalSnapPointsRegular(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.AreVerticalSnapPointsRegular;
        }
        private object get_101_StackPanel_BackgroundSizing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.BackgroundSizing;
        }
        private void set_101_StackPanel_BackgroundSizing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            that.BackgroundSizing = (global::Microsoft.UI.Xaml.Controls.BackgroundSizing)Value;
        }
        private object get_102_StackPanel_BorderBrush(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.BorderBrush;
        }
        private void set_102_StackPanel_BorderBrush(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            that.BorderBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_103_StackPanel_BorderThickness(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.BorderThickness;
        }
        private void set_103_StackPanel_BorderThickness(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            that.BorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_104_StackPanel_CornerRadius(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.CornerRadius;
        }
        private void set_104_StackPanel_CornerRadius(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            that.CornerRadius = (global::Microsoft.UI.Xaml.CornerRadius)Value;
        }
        private object get_105_StackPanel_Padding(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.Padding;
        }
        private void set_105_StackPanel_Padding(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            that.Padding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_106_StackPanel_Spacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            return that.Spacing;
        }
        private void set_106_StackPanel_Spacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackPanel)instance;
            that.Spacing = (global::System.Double)Value;
        }
        private object get_107_Panel_Background(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Panel)instance;
            return that.Background;
        }
        private void set_107_Panel_Background(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Panel)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_108_Panel_BackgroundTransition(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Panel)instance;
            return that.BackgroundTransition;
        }
        private void set_108_Panel_BackgroundTransition(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Panel)instance;
            that.BackgroundTransition = (global::Microsoft.UI.Xaml.BrushTransition)Value;
        }
        private object get_109_Panel_ChildrenTransitions(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Panel)instance;
            return that.ChildrenTransitions;
        }
        private void set_109_Panel_ChildrenTransitions(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Panel)instance;
            that.ChildrenTransitions = (global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection)Value;
        }
        private object get_110_Panel_IsItemsHost(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Panel)instance;
            return that.IsItemsHost;
        }
        private object get_111_FrameworkElement_ActualHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.ActualHeight;
        }
        private object get_112_FrameworkElement_ActualTheme(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.ActualTheme;
        }
        private object get_113_FrameworkElement_ActualWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.ActualWidth;
        }
        private object get_114_FrameworkElement_AllowFocusOnInteraction(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.AllowFocusOnInteraction;
        }
        private void set_114_FrameworkElement_AllowFocusOnInteraction(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.AllowFocusOnInteraction = (global::System.Boolean)Value;
        }
        private object get_115_FrameworkElement_AllowFocusWhenDisabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.AllowFocusWhenDisabled;
        }
        private void set_115_FrameworkElement_AllowFocusWhenDisabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.AllowFocusWhenDisabled = (global::System.Boolean)Value;
        }
        private object get_116_FrameworkElement_BaseUri(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.BaseUri;
        }
        private object get_117_FrameworkElement_DataContext(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.DataContext;
        }
        private void set_117_FrameworkElement_DataContext(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.DataContext = (global::System.Object)Value;
        }
        private object get_118_FrameworkElement_FlowDirection(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.FlowDirection;
        }
        private void set_118_FrameworkElement_FlowDirection(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.FlowDirection = (global::Microsoft.UI.Xaml.FlowDirection)Value;
        }
        private object get_119_FrameworkElement_FocusVisualMargin(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.FocusVisualMargin;
        }
        private void set_119_FrameworkElement_FocusVisualMargin(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.FocusVisualMargin = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_120_FrameworkElement_FocusVisualPrimaryBrush(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.FocusVisualPrimaryBrush;
        }
        private void set_120_FrameworkElement_FocusVisualPrimaryBrush(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.FocusVisualPrimaryBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_121_FrameworkElement_FocusVisualPrimaryThickness(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.FocusVisualPrimaryThickness;
        }
        private void set_121_FrameworkElement_FocusVisualPrimaryThickness(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.FocusVisualPrimaryThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_122_FrameworkElement_FocusVisualSecondaryBrush(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.FocusVisualSecondaryBrush;
        }
        private void set_122_FrameworkElement_FocusVisualSecondaryBrush(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.FocusVisualSecondaryBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_123_FrameworkElement_FocusVisualSecondaryThickness(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.FocusVisualSecondaryThickness;
        }
        private void set_123_FrameworkElement_FocusVisualSecondaryThickness(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.FocusVisualSecondaryThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_124_FrameworkElement_Height(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Height;
        }
        private void set_124_FrameworkElement_Height(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.Height = (global::System.Double)Value;
        }
        private object get_125_FrameworkElement_IsLoaded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.IsLoaded;
        }
        private object get_126_FrameworkElement_Language(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Language;
        }
        private void set_126_FrameworkElement_Language(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.Language = (global::System.String)Value;
        }
        private object get_127_FrameworkElement_Margin(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Margin;
        }
        private void set_127_FrameworkElement_Margin(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.Margin = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_128_FrameworkElement_MaxHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.MaxHeight;
        }
        private void set_128_FrameworkElement_MaxHeight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.MaxHeight = (global::System.Double)Value;
        }
        private object get_129_FrameworkElement_MaxWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.MaxWidth;
        }
        private void set_129_FrameworkElement_MaxWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_130_FrameworkElement_MinHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.MinHeight;
        }
        private void set_130_FrameworkElement_MinHeight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.MinHeight = (global::System.Double)Value;
        }
        private object get_131_FrameworkElement_MinWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.MinWidth;
        }
        private void set_131_FrameworkElement_MinWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_132_FrameworkElement_Name(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Name;
        }
        private void set_132_FrameworkElement_Name(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_133_FrameworkElement_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Parent;
        }
        private object get_134_FrameworkElement_RequestedTheme(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.RequestedTheme;
        }
        private void set_134_FrameworkElement_RequestedTheme(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.RequestedTheme = (global::Microsoft.UI.Xaml.ElementTheme)Value;
        }
        private object get_135_FrameworkElement_Resources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Resources;
        }
        private void set_135_FrameworkElement_Resources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.Resources = (global::Microsoft.UI.Xaml.ResourceDictionary)Value;
        }
        private object get_136_FrameworkElement_Style(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Style;
        }
        private void set_136_FrameworkElement_Style(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.Style = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_137_Style_Setters(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Style)instance;
            return that.Setters;
        }
        private object get_138_SetterBase_IsSealed(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.SetterBase)instance;
            return that.IsSealed;
        }
        private object get_139_FrameworkElement_Tag(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Tag;
        }
        private void set_139_FrameworkElement_Tag(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_140_FrameworkElement_Triggers(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Triggers;
        }
        private object get_141_FrameworkElement_Width(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            return that.Width;
        }
        private void set_141_FrameworkElement_Width(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.FrameworkElement)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_142_ContentControl_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            return that.Content;
        }
        private void set_142_ContentControl_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_143_Button_Flyout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Button)instance;
            return that.Flyout;
        }
        private void set_143_Button_Flyout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Button)instance;
            that.Flyout = (global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase)Value;
        }
        private object get_144_ButtonBase_ClickMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)instance;
            return that.ClickMode;
        }
        private void set_144_ButtonBase_ClickMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)instance;
            that.ClickMode = (global::Microsoft.UI.Xaml.Controls.ClickMode)Value;
        }
        private object get_145_ButtonBase_Command(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)instance;
            return that.Command;
        }
        private void set_145_ButtonBase_Command(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_146_ButtonBase_CommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)instance;
            return that.CommandParameter;
        }
        private void set_146_ButtonBase_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_147_ButtonBase_IsPointerOver(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)instance;
            return that.IsPointerOver;
        }
        private object get_148_ButtonBase_IsPressed(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)instance;
            return that.IsPressed;
        }
        private object get_149_ContentControl_ContentTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            return that.ContentTemplate;
        }
        private void set_149_ContentControl_ContentTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            that.ContentTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_150_FrameworkTemplate_Template(object instance)
        {
            return null;
        }
        private void set_150_FrameworkTemplate_Template(object instance, object Value)
        {
        }
        private object get_151_DataTemplate_Template(object instance)
        {
            return null;
        }
        private void set_151_DataTemplate_Template(object instance, object Value)
        {
        }
        private object get_152_ContentControl_ContentTemplateRoot(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            return that.ContentTemplateRoot;
        }
        private object get_153_ContentControl_ContentTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            return that.ContentTemplateSelector;
        }
        private void set_153_ContentControl_ContentTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            that.ContentTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_154_ContentControl_ContentTransitions(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            return that.ContentTransitions;
        }
        private void set_154_ContentControl_ContentTransitions(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ContentControl)instance;
            that.ContentTransitions = (global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection)Value;
        }
        private object get_155_Control_Background(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.Background;
        }
        private void set_155_Control_Background(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_156_Control_BackgroundSizing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.BackgroundSizing;
        }
        private void set_156_Control_BackgroundSizing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.BackgroundSizing = (global::Microsoft.UI.Xaml.Controls.BackgroundSizing)Value;
        }
        private object get_157_Control_BorderBrush(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.BorderBrush;
        }
        private void set_157_Control_BorderBrush(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.BorderBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_158_Control_BorderThickness(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.BorderThickness;
        }
        private void set_158_Control_BorderThickness(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.BorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_159_Control_CharacterSpacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.CharacterSpacing;
        }
        private void set_159_Control_CharacterSpacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.CharacterSpacing = (global::System.Int32)Value;
        }
        private object get_160_Control_CornerRadius(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.CornerRadius;
        }
        private void set_160_Control_CornerRadius(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.CornerRadius = (global::Microsoft.UI.Xaml.CornerRadius)Value;
        }
        private object get_161_Control_DefaultStyleResourceUri(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.DefaultStyleResourceUri;
        }
        private void set_161_Control_DefaultStyleResourceUri(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.DefaultStyleResourceUri = (global::System.Uri)Value;
        }
        private object get_162_Control_ElementSoundMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.ElementSoundMode;
        }
        private void set_162_Control_ElementSoundMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.ElementSoundMode = (global::Microsoft.UI.Xaml.ElementSoundMode)Value;
        }
        private object get_163_Control_FontFamily(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.FontFamily;
        }
        private void set_163_Control_FontFamily(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_164_Control_FontSize(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.FontSize;
        }
        private void set_164_Control_FontSize(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_165_Control_FontStretch(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.FontStretch;
        }
        private void set_165_Control_FontStretch(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.FontStretch = (global::Windows.UI.Text.FontStretch)Value;
        }
        private object get_166_Control_FontStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.FontStyle;
        }
        private void set_166_Control_FontStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_167_Control_FontWeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.FontWeight;
        }
        private void set_167_Control_FontWeight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_168_Control_Foreground(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.Foreground;
        }
        private void set_168_Control_Foreground(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_169_Control_HorizontalContentAlignment(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.HorizontalContentAlignment;
        }
        private void set_169_Control_HorizontalContentAlignment(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.HorizontalContentAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_170_Control_IsEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.IsEnabled;
        }
        private void set_170_Control_IsEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.IsEnabled = (global::System.Boolean)Value;
        }
        private object get_171_Control_IsFocusEngaged(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.IsFocusEngaged;
        }
        private void set_171_Control_IsFocusEngaged(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.IsFocusEngaged = (global::System.Boolean)Value;
        }
        private object get_172_Control_IsFocusEngagementEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.IsFocusEngagementEnabled;
        }
        private void set_172_Control_IsFocusEngagementEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.IsFocusEngagementEnabled = (global::System.Boolean)Value;
        }
        private object get_173_Control_IsTextScaleFactorEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.IsTextScaleFactorEnabled;
        }
        private void set_173_Control_IsTextScaleFactorEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.IsTextScaleFactorEnabled = (global::System.Boolean)Value;
        }
        private object get_174_Control_Padding(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.Padding;
        }
        private void set_174_Control_Padding(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.Padding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_175_Control_RequiresPointer(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.RequiresPointer;
        }
        private void set_175_Control_RequiresPointer(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.RequiresPointer = (global::Microsoft.UI.Xaml.Controls.RequiresPointer)Value;
        }
        private object get_176_Control_TabNavigation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.TabNavigation;
        }
        private void set_176_Control_TabNavigation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.TabNavigation = (global::Microsoft.UI.Xaml.Input.KeyboardNavigationMode)Value;
        }
        private object get_177_Control_Template(object instance)
        {
            return null;
        }
        private void set_177_Control_Template(object instance, object Value)
        {
        }
        private object get_178_ControlTemplate_Template(object instance)
        {
            return null;
        }
        private void set_178_ControlTemplate_Template(object instance, object Value)
        {
        }
        private object get_179_Control_VerticalContentAlignment(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            return that.VerticalContentAlignment;
        }
        private void set_179_Control_VerticalContentAlignment(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Control)instance;
            that.VerticalContentAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_180_Control_IsTemplateFocusTarget(object instance)
        {
            return global::Microsoft.UI.Xaml.Controls.Control.GetIsTemplateFocusTarget((global::Microsoft.UI.Xaml.FrameworkElement)instance);
        }
        private void set_180_Control_IsTemplateFocusTarget(object instance, object Value)
        {
            global::Microsoft.UI.Xaml.Controls.Control.SetIsTemplateFocusTarget((global::Microsoft.UI.Xaml.FrameworkElement)instance, (global::System.Boolean)Value);
        }
        private object get_181_Control_IsTemplateKeyTipTarget(object instance)
        {
            return global::Microsoft.UI.Xaml.Controls.Control.GetIsTemplateKeyTipTarget((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_181_Control_IsTemplateKeyTipTarget(object instance, object Value)
        {
            global::Microsoft.UI.Xaml.Controls.Control.SetIsTemplateKeyTipTarget((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.Boolean)Value);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember xamlMember = null;
            global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Application.Resources":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Application");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Resources", "Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember.Getter = get_0_Application_Resources;
                xamlMember.Setter = set_0_Application_Resources;
                break;
            case "Microsoft.UI.Xaml.Application.DebugSettings":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Application");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "DebugSettings", "Microsoft.UI.Xaml.DebugSettings");
                xamlMember.Getter = get_1_Application_DebugSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Application.FocusVisualKind":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Application");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FocusVisualKind", "Microsoft.UI.Xaml.FocusVisualKind");
                xamlMember.Getter = get_2_Application_FocusVisualKind;
                xamlMember.Setter = set_2_Application_FocusVisualKind;
                break;
            case "Microsoft.UI.Xaml.Application.HighContrastAdjustment":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Application");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "HighContrastAdjustment", "Microsoft.UI.Xaml.ApplicationHighContrastAdjustment");
                xamlMember.Getter = get_3_Application_HighContrastAdjustment;
                xamlMember.Setter = set_3_Application_HighContrastAdjustment;
                break;
            case "Microsoft.UI.Xaml.Application.RequestedTheme":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Application");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RequestedTheme", "Microsoft.UI.Xaml.ApplicationTheme");
                xamlMember.Getter = get_4_Application_RequestedTheme;
                xamlMember.Setter = set_4_Application_RequestedTheme;
                break;
            case "Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "MergedDictionaries", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.ResourceDictionary>");
                xamlMember.Getter = get_5_ResourceDictionary_MergedDictionaries;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.ResourceDictionary.Keys":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Keys", "System.Collections.Generic.ICollection`1<Object>");
                xamlMember.Getter = get_6_ResourceDictionary_Keys;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.ResourceDictionary.Values":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.Generic.ICollection`1<Object>");
                xamlMember.Getter = get_7_ResourceDictionary_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.ResourceDictionary.Count":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Count", "Int32");
                xamlMember.Getter = get_8_ResourceDictionary_Count;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.ResourceDictionary.IsReadOnly":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.Getter = get_9_ResourceDictionary_IsReadOnly;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.ResourceDictionary.Source":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Source", "System.Uri");
                xamlMember.Getter = get_10_ResourceDictionary_Source;
                xamlMember.Setter = set_10_ResourceDictionary_Source;
                break;
            case "Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ThemeDictionaries", "System.Collections.Generic.IDictionary`2<Object, Object>");
                xamlMember.Getter = get_11_ResourceDictionary_ThemeDictionaries;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.DependencyObject.Dispatcher":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_12_DependencyObject_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.DependencyObject.DispatcherQueue":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "DispatcherQueue", "Microsoft.System.DispatcherQueue");
                xamlMember.Getter = get_13_DependencyObject_DispatcherQueue;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_14_XamlControlsResources_UseCompactResources;
                break;
            case "Microsoft.UI.Xaml.Window.Content":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_15_Window_Content;
                xamlMember.Setter = set_15_Window_Content;
                break;
            case "Microsoft.UI.Xaml.Window.Bounds":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Bounds", "Windows.Foundation.Rect");
                xamlMember.Getter = get_16_Window_Bounds;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Window.Compositor":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Compositor", "Microsoft.UI.Composition.Compositor");
                xamlMember.Getter = get_17_Window_Compositor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Window.CoreWindow":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CoreWindow", "Windows.UI.Core.CoreWindow");
                xamlMember.Getter = get_18_Window_CoreWindow;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Window.Dispatcher":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_19_Window_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Window.DispatcherQueue":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "DispatcherQueue", "Microsoft.System.DispatcherQueue");
                xamlMember.Getter = get_20_Window_DispatcherQueue;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Window.ExtendsContentIntoTitleBar":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ExtendsContentIntoTitleBar", "Boolean");
                xamlMember.Getter = get_21_Window_ExtendsContentIntoTitleBar;
                xamlMember.Setter = set_21_Window_ExtendsContentIntoTitleBar;
                break;
            case "Microsoft.UI.Xaml.Window.Title":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_22_Window_Title;
                xamlMember.Setter = set_22_Window_Title;
                break;
            case "Microsoft.UI.Xaml.Window.Visible":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Window");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Visible", "Boolean");
                xamlMember.Getter = get_23_Window_Visible;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Panel.Children":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Panel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Children", "Microsoft.UI.Xaml.Controls.UIElementCollection");
                xamlMember.Getter = get_24_Panel_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.UIElement.AccessKey":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "AccessKey", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_UIElement_AccessKey;
                xamlMember.Setter = set_25_UIElement_AccessKey;
                break;
            case "Microsoft.UI.Xaml.UIElement.AccessKeyScopeOwner":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "AccessKeyScopeOwner", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_UIElement_AccessKeyScopeOwner;
                xamlMember.Setter = set_26_UIElement_AccessKeyScopeOwner;
                break;
            case "Microsoft.UI.Xaml.UIElement.ActualOffset":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ActualOffset", "System.Numerics.Vector3");
                xamlMember.Getter = get_27_UIElement_ActualOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.UIElement.ActualSize":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ActualSize", "System.Numerics.Vector2");
                xamlMember.Getter = get_28_UIElement_ActualSize;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.UIElement.AllowDrop":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "AllowDrop", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_UIElement_AllowDrop;
                xamlMember.Setter = set_29_UIElement_AllowDrop;
                break;
            case "Microsoft.UI.Xaml.UIElement.CacheMode":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CacheMode", "Microsoft.UI.Xaml.Media.CacheMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_UIElement_CacheMode;
                xamlMember.Setter = set_30_UIElement_CacheMode;
                break;
            case "Microsoft.UI.Xaml.UIElement.CanBeScrollAnchor":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CanBeScrollAnchor", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_UIElement_CanBeScrollAnchor;
                xamlMember.Setter = set_31_UIElement_CanBeScrollAnchor;
                break;
            case "Microsoft.UI.Xaml.UIElement.CanDrag":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CanDrag", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_UIElement_CanDrag;
                xamlMember.Setter = set_32_UIElement_CanDrag;
                break;
            case "Microsoft.UI.Xaml.UIElement.CenterPoint":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CenterPoint", "System.Numerics.Vector3");
                xamlMember.Getter = get_33_UIElement_CenterPoint;
                xamlMember.Setter = set_33_UIElement_CenterPoint;
                break;
            case "Microsoft.UI.Xaml.UIElement.Clip":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Clip", "Microsoft.UI.Xaml.Media.RectangleGeometry");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_UIElement_Clip;
                xamlMember.Setter = set_34_UIElement_Clip;
                break;
            case "Microsoft.UI.Xaml.UIElement.CompositeMode":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CompositeMode", "Microsoft.UI.Xaml.Media.ElementCompositeMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_UIElement_CompositeMode;
                xamlMember.Setter = set_35_UIElement_CompositeMode;
                break;
            case "Microsoft.UI.Xaml.UIElement.ContextFlyout":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ContextFlyout", "Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_UIElement_ContextFlyout;
                xamlMember.Setter = set_36_UIElement_ContextFlyout;
                break;
            case "Microsoft.UI.Xaml.UIElement.DesiredSize":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "DesiredSize", "Windows.Foundation.Size");
                xamlMember.Getter = get_37_UIElement_DesiredSize;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.UIElement.ExitDisplayModeOnAccessKeyInvoked":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ExitDisplayModeOnAccessKeyInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_UIElement_ExitDisplayModeOnAccessKeyInvoked;
                xamlMember.Setter = set_38_UIElement_ExitDisplayModeOnAccessKeyInvoked;
                break;
            case "Microsoft.UI.Xaml.UIElement.FocusState":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FocusState", "Microsoft.UI.Xaml.FocusState");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_UIElement_FocusState;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.UIElement.HighContrastAdjustment":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "HighContrastAdjustment", "Microsoft.UI.Xaml.ElementHighContrastAdjustment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_UIElement_HighContrastAdjustment;
                xamlMember.Setter = set_40_UIElement_HighContrastAdjustment;
                break;
            case "Microsoft.UI.Xaml.UIElement.IsAccessKeyScope":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsAccessKeyScope", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_UIElement_IsAccessKeyScope;
                xamlMember.Setter = set_41_UIElement_IsAccessKeyScope;
                break;
            case "Microsoft.UI.Xaml.UIElement.IsDoubleTapEnabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsDoubleTapEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_UIElement_IsDoubleTapEnabled;
                xamlMember.Setter = set_42_UIElement_IsDoubleTapEnabled;
                break;
            case "Microsoft.UI.Xaml.UIElement.IsHitTestVisible":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsHitTestVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_UIElement_IsHitTestVisible;
                xamlMember.Setter = set_43_UIElement_IsHitTestVisible;
                break;
            case "Microsoft.UI.Xaml.UIElement.IsHoldingEnabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsHoldingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_UIElement_IsHoldingEnabled;
                xamlMember.Setter = set_44_UIElement_IsHoldingEnabled;
                break;
            case "Microsoft.UI.Xaml.UIElement.IsRightTapEnabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsRightTapEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_UIElement_IsRightTapEnabled;
                xamlMember.Setter = set_45_UIElement_IsRightTapEnabled;
                break;
            case "Microsoft.UI.Xaml.UIElement.IsTabStop":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsTabStop", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_UIElement_IsTabStop;
                xamlMember.Setter = set_46_UIElement_IsTabStop;
                break;
            case "Microsoft.UI.Xaml.UIElement.IsTapEnabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsTapEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_UIElement_IsTapEnabled;
                xamlMember.Setter = set_47_UIElement_IsTapEnabled;
                break;
            case "Microsoft.UI.Xaml.UIElement.KeyTipHorizontalOffset":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "KeyTipHorizontalOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_UIElement_KeyTipHorizontalOffset;
                xamlMember.Setter = set_48_UIElement_KeyTipHorizontalOffset;
                break;
            case "Microsoft.UI.Xaml.UIElement.KeyTipPlacementMode":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "KeyTipPlacementMode", "Microsoft.UI.Xaml.Input.KeyTipPlacementMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_UIElement_KeyTipPlacementMode;
                xamlMember.Setter = set_49_UIElement_KeyTipPlacementMode;
                break;
            case "Microsoft.UI.Xaml.UIElement.KeyTipTarget":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "KeyTipTarget", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_UIElement_KeyTipTarget;
                xamlMember.Setter = set_50_UIElement_KeyTipTarget;
                break;
            case "Microsoft.UI.Xaml.UIElement.KeyTipVerticalOffset":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "KeyTipVerticalOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_UIElement_KeyTipVerticalOffset;
                xamlMember.Setter = set_51_UIElement_KeyTipVerticalOffset;
                break;
            case "Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementMode":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "KeyboardAcceleratorPlacementMode", "Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_UIElement_KeyboardAcceleratorPlacementMode;
                xamlMember.Setter = set_52_UIElement_KeyboardAcceleratorPlacementMode;
                break;
            case "Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementTarget":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "KeyboardAcceleratorPlacementTarget", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_UIElement_KeyboardAcceleratorPlacementTarget;
                xamlMember.Setter = set_53_UIElement_KeyboardAcceleratorPlacementTarget;
                break;
            case "Microsoft.UI.Xaml.UIElement.KeyboardAccelerators":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "KeyboardAccelerators", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Input.KeyboardAccelerator>");
                xamlMember.Getter = get_54_UIElement_KeyboardAccelerators;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Input.KeyboardAccelerator.IsEnabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Input.KeyboardAccelerator");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_KeyboardAccelerator_IsEnabled;
                xamlMember.Setter = set_55_KeyboardAccelerator_IsEnabled;
                break;
            case "Microsoft.UI.Xaml.Input.KeyboardAccelerator.Key":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Input.KeyboardAccelerator");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Key", "Windows.System.VirtualKey");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_KeyboardAccelerator_Key;
                xamlMember.Setter = set_56_KeyboardAccelerator_Key;
                break;
            case "Microsoft.UI.Xaml.Input.KeyboardAccelerator.Modifiers":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Input.KeyboardAccelerator");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Modifiers", "Windows.System.VirtualKeyModifiers");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_KeyboardAccelerator_Modifiers;
                xamlMember.Setter = set_57_KeyboardAccelerator_Modifiers;
                break;
            case "Microsoft.UI.Xaml.Input.KeyboardAccelerator.ScopeOwner":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Input.KeyboardAccelerator");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ScopeOwner", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_KeyboardAccelerator_ScopeOwner;
                xamlMember.Setter = set_58_KeyboardAccelerator_ScopeOwner;
                break;
            case "Microsoft.UI.Xaml.UIElement.Lights":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Lights", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.XamlLight>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_UIElement_Lights;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.UIElement.ManipulationMode":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ManipulationMode", "Microsoft.UI.Xaml.Input.ManipulationModes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_UIElement_ManipulationMode;
                xamlMember.Setter = set_60_UIElement_ManipulationMode;
                break;
            case "Microsoft.UI.Xaml.UIElement.Opacity":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Opacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_UIElement_Opacity;
                xamlMember.Setter = set_61_UIElement_Opacity;
                break;
            case "Microsoft.UI.Xaml.UIElement.OpacityTransition":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "OpacityTransition", "Microsoft.UI.Xaml.ScalarTransition");
                xamlMember.Getter = get_62_UIElement_OpacityTransition;
                xamlMember.Setter = set_62_UIElement_OpacityTransition;
                break;
            case "Microsoft.UI.Xaml.UIElement.PointerCaptures":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "PointerCaptures", "System.Collections.Generic.IReadOnlyList`1<Microsoft.UI.Xaml.Input.Pointer>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_UIElement_PointerCaptures;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.UIElement.Projection":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Projection", "Microsoft.UI.Xaml.Media.Projection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_UIElement_Projection;
                xamlMember.Setter = set_64_UIElement_Projection;
                break;
            case "Microsoft.UI.Xaml.UIElement.RasterizationScale":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RasterizationScale", "Double");
                xamlMember.Getter = get_65_UIElement_RasterizationScale;
                xamlMember.Setter = set_65_UIElement_RasterizationScale;
                break;
            case "Microsoft.UI.Xaml.UIElement.RenderSize":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RenderSize", "Windows.Foundation.Size");
                xamlMember.Getter = get_66_UIElement_RenderSize;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.UIElement.RenderTransform":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RenderTransform", "Microsoft.UI.Xaml.Media.Transform");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_UIElement_RenderTransform;
                xamlMember.Setter = set_67_UIElement_RenderTransform;
                break;
            case "Microsoft.UI.Xaml.UIElement.RenderTransformOrigin":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RenderTransformOrigin", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_UIElement_RenderTransformOrigin;
                xamlMember.Setter = set_68_UIElement_RenderTransformOrigin;
                break;
            case "Microsoft.UI.Xaml.UIElement.Rotation":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Rotation", "Single");
                xamlMember.Getter = get_69_UIElement_Rotation;
                xamlMember.Setter = set_69_UIElement_Rotation;
                break;
            case "Microsoft.UI.Xaml.UIElement.RotationAxis":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RotationAxis", "System.Numerics.Vector3");
                xamlMember.Getter = get_70_UIElement_RotationAxis;
                xamlMember.Setter = set_70_UIElement_RotationAxis;
                break;
            case "Microsoft.UI.Xaml.UIElement.RotationTransition":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RotationTransition", "Microsoft.UI.Xaml.ScalarTransition");
                xamlMember.Getter = get_71_UIElement_RotationTransition;
                xamlMember.Setter = set_71_UIElement_RotationTransition;
                break;
            case "Microsoft.UI.Xaml.UIElement.Scale":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Scale", "System.Numerics.Vector3");
                xamlMember.Getter = get_72_UIElement_Scale;
                xamlMember.Setter = set_72_UIElement_Scale;
                break;
            case "Microsoft.UI.Xaml.UIElement.ScaleTransition":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ScaleTransition", "Microsoft.UI.Xaml.Vector3Transition");
                xamlMember.Getter = get_73_UIElement_ScaleTransition;
                xamlMember.Setter = set_73_UIElement_ScaleTransition;
                break;
            case "Microsoft.UI.Xaml.UIElement.Shadow":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Shadow", "Microsoft.UI.Xaml.Media.Shadow");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_UIElement_Shadow;
                xamlMember.Setter = set_74_UIElement_Shadow;
                break;
            case "Microsoft.UI.Xaml.UIElement.TabFocusNavigation":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "TabFocusNavigation", "Microsoft.UI.Xaml.Input.KeyboardNavigationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_UIElement_TabFocusNavigation;
                xamlMember.Setter = set_75_UIElement_TabFocusNavigation;
                break;
            case "Microsoft.UI.Xaml.UIElement.TabIndex":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "TabIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_UIElement_TabIndex;
                xamlMember.Setter = set_76_UIElement_TabIndex;
                break;
            case "Microsoft.UI.Xaml.UIElement.Transform3D":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Transform3D", "Microsoft.UI.Xaml.Media.Media3D.Transform3D");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_UIElement_Transform3D;
                xamlMember.Setter = set_77_UIElement_Transform3D;
                break;
            case "Microsoft.UI.Xaml.UIElement.TransformMatrix":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "TransformMatrix", "System.Numerics.Matrix4x4");
                xamlMember.Getter = get_78_UIElement_TransformMatrix;
                xamlMember.Setter = set_78_UIElement_TransformMatrix;
                break;
            case "Microsoft.UI.Xaml.UIElement.Transitions":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Transitions", "Microsoft.UI.Xaml.Media.Animation.TransitionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_UIElement_Transitions;
                xamlMember.Setter = set_79_UIElement_Transitions;
                break;
            case "Microsoft.UI.Xaml.UIElement.Translation":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Translation", "System.Numerics.Vector3");
                xamlMember.Getter = get_80_UIElement_Translation;
                xamlMember.Setter = set_80_UIElement_Translation;
                break;
            case "Microsoft.UI.Xaml.UIElement.TranslationTransition":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "TranslationTransition", "Microsoft.UI.Xaml.Vector3Transition");
                xamlMember.Getter = get_81_UIElement_TranslationTransition;
                xamlMember.Setter = set_81_UIElement_TranslationTransition;
                break;
            case "Microsoft.UI.Xaml.UIElement.UseLayoutRounding":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "UseLayoutRounding", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_UIElement_UseLayoutRounding;
                xamlMember.Setter = set_82_UIElement_UseLayoutRounding;
                break;
            case "Microsoft.UI.Xaml.UIElement.UseSystemFocusVisuals":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "UseSystemFocusVisuals", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_UIElement_UseSystemFocusVisuals;
                xamlMember.Setter = set_83_UIElement_UseSystemFocusVisuals;
                break;
            case "Microsoft.UI.Xaml.UIElement.Visibility":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Visibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_UIElement_Visibility;
                xamlMember.Setter = set_84_UIElement_Visibility;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusDown":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusDown", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_UIElement_XYFocusDown;
                xamlMember.Setter = set_85_UIElement_XYFocusDown;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusDownNavigationStrategy":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusDownNavigationStrategy", "Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_UIElement_XYFocusDownNavigationStrategy;
                xamlMember.Setter = set_86_UIElement_XYFocusDownNavigationStrategy;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusKeyboardNavigation":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusKeyboardNavigation", "Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_UIElement_XYFocusKeyboardNavigation;
                xamlMember.Setter = set_87_UIElement_XYFocusKeyboardNavigation;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusLeft":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusLeft", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_UIElement_XYFocusLeft;
                xamlMember.Setter = set_88_UIElement_XYFocusLeft;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusLeftNavigationStrategy":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusLeftNavigationStrategy", "Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_UIElement_XYFocusLeftNavigationStrategy;
                xamlMember.Setter = set_89_UIElement_XYFocusLeftNavigationStrategy;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusRight":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusRight", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_UIElement_XYFocusRight;
                xamlMember.Setter = set_90_UIElement_XYFocusRight;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusRightNavigationStrategy":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusRightNavigationStrategy", "Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_UIElement_XYFocusRightNavigationStrategy;
                xamlMember.Setter = set_91_UIElement_XYFocusRightNavigationStrategy;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusUp":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusUp", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_UIElement_XYFocusUp;
                xamlMember.Setter = set_92_UIElement_XYFocusUp;
                break;
            case "Microsoft.UI.Xaml.UIElement.XYFocusUpNavigationStrategy":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XYFocusUpNavigationStrategy", "Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_UIElement_XYFocusUpNavigationStrategy;
                xamlMember.Setter = set_93_UIElement_XYFocusUpNavigationStrategy;
                break;
            case "Microsoft.UI.Xaml.UIElement.XamlRoot":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.UIElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "XamlRoot", "Microsoft.UI.Xaml.XamlRoot");
                xamlMember.Getter = get_94_UIElement_XamlRoot;
                xamlMember.Setter = set_94_UIElement_XamlRoot;
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.Orientation":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_StackPanel_Orientation;
                xamlMember.Setter = set_95_StackPanel_Orientation;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.HorizontalAlignment":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "HorizontalAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_FrameworkElement_HorizontalAlignment;
                xamlMember.Setter = set_96_FrameworkElement_HorizontalAlignment;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.VerticalAlignment":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_FrameworkElement_VerticalAlignment;
                xamlMember.Setter = set_97_FrameworkElement_VerticalAlignment;
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.AreHorizontalSnapPointsRegular":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "AreHorizontalSnapPointsRegular", "Boolean");
                xamlMember.Getter = get_98_StackPanel_AreHorizontalSnapPointsRegular;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.AreScrollSnapPointsRegular":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "AreScrollSnapPointsRegular", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_StackPanel_AreScrollSnapPointsRegular;
                xamlMember.Setter = set_99_StackPanel_AreScrollSnapPointsRegular;
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.AreVerticalSnapPointsRegular":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "AreVerticalSnapPointsRegular", "Boolean");
                xamlMember.Getter = get_100_StackPanel_AreVerticalSnapPointsRegular;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.BackgroundSizing":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "BackgroundSizing", "Microsoft.UI.Xaml.Controls.BackgroundSizing");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_StackPanel_BackgroundSizing;
                xamlMember.Setter = set_101_StackPanel_BackgroundSizing;
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.BorderBrush":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "BorderBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_StackPanel_BorderBrush;
                xamlMember.Setter = set_102_StackPanel_BorderBrush;
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.BorderThickness":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "BorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_StackPanel_BorderThickness;
                xamlMember.Setter = set_103_StackPanel_BorderThickness;
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.CornerRadius":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CornerRadius", "Microsoft.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_StackPanel_CornerRadius;
                xamlMember.Setter = set_104_StackPanel_CornerRadius;
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.Padding":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Padding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_StackPanel_Padding;
                xamlMember.Setter = set_105_StackPanel_Padding;
                break;
            case "Microsoft.UI.Xaml.Controls.StackPanel.Spacing":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackPanel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Spacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_StackPanel_Spacing;
                xamlMember.Setter = set_106_StackPanel_Spacing;
                break;
            case "Microsoft.UI.Xaml.Controls.Panel.Background":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Panel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_Panel_Background;
                xamlMember.Setter = set_107_Panel_Background;
                break;
            case "Microsoft.UI.Xaml.Controls.Panel.BackgroundTransition":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Panel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "BackgroundTransition", "Microsoft.UI.Xaml.BrushTransition");
                xamlMember.Getter = get_108_Panel_BackgroundTransition;
                xamlMember.Setter = set_108_Panel_BackgroundTransition;
                break;
            case "Microsoft.UI.Xaml.Controls.Panel.ChildrenTransitions":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Panel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ChildrenTransitions", "Microsoft.UI.Xaml.Media.Animation.TransitionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_Panel_ChildrenTransitions;
                xamlMember.Setter = set_109_Panel_ChildrenTransitions;
                break;
            case "Microsoft.UI.Xaml.Controls.Panel.IsItemsHost":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Panel");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsItemsHost", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_Panel_IsItemsHost;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.ActualHeight":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ActualHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_FrameworkElement_ActualHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.ActualTheme":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ActualTheme", "Microsoft.UI.Xaml.ElementTheme");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_FrameworkElement_ActualTheme;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.ActualWidth":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ActualWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_FrameworkElement_ActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.AllowFocusOnInteraction":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "AllowFocusOnInteraction", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_FrameworkElement_AllowFocusOnInteraction;
                xamlMember.Setter = set_114_FrameworkElement_AllowFocusOnInteraction;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.AllowFocusWhenDisabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "AllowFocusWhenDisabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_FrameworkElement_AllowFocusWhenDisabled;
                xamlMember.Setter = set_115_FrameworkElement_AllowFocusWhenDisabled;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.BaseUri":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "BaseUri", "System.Uri");
                xamlMember.Getter = get_116_FrameworkElement_BaseUri;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.DataContext":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "DataContext", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_FrameworkElement_DataContext;
                xamlMember.Setter = set_117_FrameworkElement_DataContext;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.FlowDirection":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FlowDirection", "Microsoft.UI.Xaml.FlowDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_FrameworkElement_FlowDirection;
                xamlMember.Setter = set_118_FrameworkElement_FlowDirection;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.FocusVisualMargin":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FocusVisualMargin", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_FrameworkElement_FocusVisualMargin;
                xamlMember.Setter = set_119_FrameworkElement_FocusVisualMargin;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryBrush":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FocusVisualPrimaryBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_FrameworkElement_FocusVisualPrimaryBrush;
                xamlMember.Setter = set_120_FrameworkElement_FocusVisualPrimaryBrush;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryThickness":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FocusVisualPrimaryThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_FrameworkElement_FocusVisualPrimaryThickness;
                xamlMember.Setter = set_121_FrameworkElement_FocusVisualPrimaryThickness;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryBrush":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FocusVisualSecondaryBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_FrameworkElement_FocusVisualSecondaryBrush;
                xamlMember.Setter = set_122_FrameworkElement_FocusVisualSecondaryBrush;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryThickness":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FocusVisualSecondaryThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_FrameworkElement_FocusVisualSecondaryThickness;
                xamlMember.Setter = set_123_FrameworkElement_FocusVisualSecondaryThickness;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Height":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_FrameworkElement_Height;
                xamlMember.Setter = set_124_FrameworkElement_Height;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.IsLoaded":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsLoaded", "Boolean");
                xamlMember.Getter = get_125_FrameworkElement_IsLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Language":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Language", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_FrameworkElement_Language;
                xamlMember.Setter = set_126_FrameworkElement_Language;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Margin":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Margin", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_FrameworkElement_Margin;
                xamlMember.Setter = set_127_FrameworkElement_Margin;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.MaxHeight":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "MaxHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_FrameworkElement_MaxHeight;
                xamlMember.Setter = set_128_FrameworkElement_MaxHeight;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.MaxWidth":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_FrameworkElement_MaxWidth;
                xamlMember.Setter = set_129_FrameworkElement_MaxWidth;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.MinHeight":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "MinHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_FrameworkElement_MinHeight;
                xamlMember.Setter = set_130_FrameworkElement_MinHeight;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.MinWidth":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_FrameworkElement_MinWidth;
                xamlMember.Setter = set_131_FrameworkElement_MinWidth;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Name":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_FrameworkElement_Name;
                xamlMember.Setter = set_132_FrameworkElement_Name;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Parent":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_133_FrameworkElement_Parent;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.RequestedTheme":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RequestedTheme", "Microsoft.UI.Xaml.ElementTheme");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_FrameworkElement_RequestedTheme;
                xamlMember.Setter = set_134_FrameworkElement_RequestedTheme;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Resources":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Resources", "Microsoft.UI.Xaml.ResourceDictionary");
                xamlMember.Getter = get_135_FrameworkElement_Resources;
                xamlMember.Setter = set_135_FrameworkElement_Resources;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Style":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Style", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_FrameworkElement_Style;
                xamlMember.Setter = set_136_FrameworkElement_Style;
                break;
            case "Microsoft.UI.Xaml.Style.Setters":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Style");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Setters", "Microsoft.UI.Xaml.SetterBaseCollection");
                xamlMember.Getter = get_137_Style_Setters;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.SetterBase.IsSealed":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.SetterBase");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsSealed", "Boolean");
                xamlMember.Getter = get_138_SetterBase_IsSealed;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Tag":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_FrameworkElement_Tag;
                xamlMember.Setter = set_139_FrameworkElement_Tag;
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Triggers":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Triggers", "Microsoft.UI.Xaml.TriggerCollection");
                xamlMember.Getter = get_140_FrameworkElement_Triggers;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.FrameworkElement.Width":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_FrameworkElement_Width;
                xamlMember.Setter = set_141_FrameworkElement_Width;
                break;
            case "Microsoft.UI.Xaml.Controls.ContentControl.Content":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_ContentControl_Content;
                xamlMember.Setter = set_142_ContentControl_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.Button.Flyout":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Button");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Flyout", "Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_Button_Flyout;
                xamlMember.Setter = set_143_Button_Flyout;
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.ClickMode":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ClickMode", "Microsoft.UI.Xaml.Controls.ClickMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_ButtonBase_ClickMode;
                xamlMember.Setter = set_144_ButtonBase_ClickMode;
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.Command":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_ButtonBase_Command;
                xamlMember.Setter = set_145_ButtonBase_Command;
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameter":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_ButtonBase_CommandParameter;
                xamlMember.Setter = set_146_ButtonBase_CommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPointerOver":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsPointerOver", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_ButtonBase_IsPointerOver;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPressed":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsPressed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_ButtonBase_IsPressed;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_ContentControl_ContentTemplate;
                xamlMember.Setter = set_149_ContentControl_ContentTemplate;
                break;
            case "Microsoft.UI.Xaml.FrameworkTemplate.Template":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkTemplate");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Template", "Object");
                xamlMember.Getter = get_150_FrameworkTemplate_Template;
                xamlMember.Setter = set_150_FrameworkTemplate_Template;
                break;
            case "Microsoft.UI.Xaml.DataTemplate.Template":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.DataTemplate");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Template", "Object");
                xamlMember.Getter = get_151_DataTemplate_Template;
                xamlMember.Setter = set_151_DataTemplate_Template;
                break;
            case "Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplateRoot":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ContentTemplateRoot", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_152_ContentControl_ContentTemplateRoot;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplateSelector":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ContentTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_ContentControl_ContentTemplateSelector;
                xamlMember.Setter = set_153_ContentControl_ContentTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ContentTransitions", "Microsoft.UI.Xaml.Media.Animation.TransitionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_ContentControl_ContentTransitions;
                xamlMember.Setter = set_154_ContentControl_ContentTransitions;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.Background":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_Control_Background;
                xamlMember.Setter = set_155_Control_Background;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.BackgroundSizing":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "BackgroundSizing", "Microsoft.UI.Xaml.Controls.BackgroundSizing");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_Control_BackgroundSizing;
                xamlMember.Setter = set_156_Control_BackgroundSizing;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.BorderBrush":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "BorderBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_Control_BorderBrush;
                xamlMember.Setter = set_157_Control_BorderBrush;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.BorderThickness":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "BorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_Control_BorderThickness;
                xamlMember.Setter = set_158_Control_BorderThickness;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.CharacterSpacing":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CharacterSpacing", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_Control_CharacterSpacing;
                xamlMember.Setter = set_159_Control_CharacterSpacing;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.CornerRadius":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "CornerRadius", "Microsoft.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_Control_CornerRadius;
                xamlMember.Setter = set_160_Control_CornerRadius;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.DefaultStyleResourceUri":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "DefaultStyleResourceUri", "System.Uri");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_Control_DefaultStyleResourceUri;
                xamlMember.Setter = set_161_Control_DefaultStyleResourceUri;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.ElementSoundMode":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "ElementSoundMode", "Microsoft.UI.Xaml.ElementSoundMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_162_Control_ElementSoundMode;
                xamlMember.Setter = set_162_Control_ElementSoundMode;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.FontFamily":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_Control_FontFamily;
                xamlMember.Setter = set_163_Control_FontFamily;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.FontSize":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_Control_FontSize;
                xamlMember.Setter = set_164_Control_FontSize;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.FontStretch":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FontStretch", "Windows.UI.Text.FontStretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_Control_FontStretch;
                xamlMember.Setter = set_165_Control_FontStretch;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.FontStyle":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_Control_FontStyle;
                xamlMember.Setter = set_166_Control_FontStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.FontWeight":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_Control_FontWeight;
                xamlMember.Setter = set_167_Control_FontWeight;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.Foreground":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_Control_Foreground;
                xamlMember.Setter = set_168_Control_Foreground;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.HorizontalContentAlignment":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "HorizontalContentAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_Control_HorizontalContentAlignment;
                xamlMember.Setter = set_169_Control_HorizontalContentAlignment;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.IsEnabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_Control_IsEnabled;
                xamlMember.Setter = set_170_Control_IsEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.IsFocusEngaged":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsFocusEngaged", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_Control_IsFocusEngaged;
                xamlMember.Setter = set_171_Control_IsFocusEngaged;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.IsFocusEngagementEnabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsFocusEngagementEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_Control_IsFocusEngagementEnabled;
                xamlMember.Setter = set_172_Control_IsFocusEngagementEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsTextScaleFactorEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_Control_IsTextScaleFactorEnabled;
                xamlMember.Setter = set_173_Control_IsTextScaleFactorEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.Padding":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Padding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_174_Control_Padding;
                xamlMember.Setter = set_174_Control_Padding;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.RequiresPointer":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "RequiresPointer", "Microsoft.UI.Xaml.Controls.RequiresPointer");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_175_Control_RequiresPointer;
                xamlMember.Setter = set_175_Control_RequiresPointer;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.TabNavigation":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "TabNavigation", "Microsoft.UI.Xaml.Input.KeyboardNavigationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_176_Control_TabNavigation;
                xamlMember.Setter = set_176_Control_TabNavigation;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.Template":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Template", "Microsoft.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_Control_Template;
                xamlMember.Setter = set_177_Control_Template;
                break;
            case "Microsoft.UI.Xaml.Controls.ControlTemplate.Template":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ControlTemplate");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "Template", "Object");
                xamlMember.Getter = get_178_ControlTemplate_Template;
                xamlMember.Setter = set_178_ControlTemplate_Template;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.VerticalContentAlignment":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "VerticalContentAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_Control_VerticalContentAlignment;
                xamlMember.Setter = set_179_Control_VerticalContentAlignment;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.IsTemplateFocusTarget":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsTemplateFocusTarget", "Boolean");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_180_Control_IsTemplateFocusTarget;
                xamlMember.Setter = set_180_Control_IsTemplateFocusTarget;
                break;
            case "Microsoft.UI.Xaml.Controls.Control.IsTemplateKeyTipTarget":
                userType = (global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control");
                xamlMember = new global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlMember(this, "IsTemplateKeyTipTarget", "Boolean");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_181_Control_IsTemplateKeyTipTarget;
                xamlMember.Setter = set_181_Control_IsTemplateKeyTipTarget;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::AuthentiKitTrimCalibration.AuthentiKitTrimCalibration_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

